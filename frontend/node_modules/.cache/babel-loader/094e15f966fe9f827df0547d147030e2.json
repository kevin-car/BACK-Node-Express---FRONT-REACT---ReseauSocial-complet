{"ast":null,"code":"var _jsxFileName = \"/Users/kevincarpentier/Library/Mobile Documents/com~apple~CloudDocs/Sites /PRojet 7 v2/frontend/src/container/pageMessages.js\";\nimport React from \"react\";\nimport Entete from \"./entete/entete\";\nimport PostMessages from \"./postMessage/postMessage\";\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass PageMessage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      //Affichage des messages\n      ilLoaded: false,\n      messagess: [],\n      //Post\n      imageSaisi: \"none\",\n      auteurSaisi: \"Kévin\",\n      messageSaisi: \"\",\n      createdAtSaisi: \"\",\n      updatedAtSaisi: \"\"\n    };\n\n    this.componentDidMount = () => {\n      // Appeler tous les messages dans la BDD \n      axios.get(\"http://localhost:8000/\").then(reponse => {\n        const messagess = reponse.data.data.map(message => {\n          return {\n            id: message.id,\n            auteur: message.auteur,\n            photo: message.photo,\n            message: message.message,\n            createdAt: message.createdAt,\n            updatedAt: message.updatedAt,\n            created: message.created\n          };\n        });\n        this.setState({\n          messagess\n        });\n      }).catch(error => {\n        console.log(error);\n      }); // Mettre à jour l'heure actuelle dans les states\n\n      setInterval(() => {\n        this.setState({\n          createdAtSaisi: Date.now() - 7 * 24 * 60 * 60 * 1000,\n          updatedAtSaisi: Date.now() - 7 * 24 * 60 * 60 * 1000,\n          created: Date.now() - 7 * 24 * 60 * 60 * 1000\n        });\n      }, 1000);\n    };\n\n    this.postMessages = () => {\n      /* Je prépare mon nouveau message pour les states et la base de données */\n      const newMessage = {\n        message: this.state.messageSaisi,\n        image: this.state.imageSaisi,\n        auteur: this.state.auteurSaisi,\n        createdAt: this.state.createdAtSaisi,\n        updatedAt: this.state.updatedAtSaisi,\n        created: this.state.createdAtSaisi\n      };\n      /* Envoi vers la base de donnée */\n\n      console.log(newMessage.createdAt); // test test test test tesst \n\n      axios.post('http://localhost:8000/createMessage/', newMessage).then(function (reponse) {\n        //On traite la suite une fois la réponse obtenue \n        console.log(reponse);\n      }).catch(function (erreur) {\n        //On traite ici les erreurs éventuellement survenues\n        console.log(erreur);\n      });\n      console.log('ca fonctionne');\n      /* Envoi vers les states */\n\n      const newState = [...this.state.messagess];\n      newState.push(newMessage);\n      this.setState({\n        messagess: newState\n      });\n    };\n\n    this.HandleDeleteMessage = id => {\n      const messageIndex = this.state.messagess.findIndex(l => {\n        return l.id === id;\n      });\n      console.log(id); // Supprime dans les states\n\n      const newmessagess = [...this.state.messagess];\n      newmessagess.splice(messageIndex, 1);\n      this.setState({\n        messagess: newmessagess\n      }); //Supprime dans la base de donnée\n\n      const pathWithID = `http://localhost:8000/delete/${id}`;\n      console.log(pathWithID, \"l'id supprimé :\", id);\n      axios.delete(pathWithID, {\n        data: {\n          id: id\n        }\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Entete, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PostMessages, {\n        envoi: () => this.postMessages(),\n        value: this.state.messageSaisi,\n        onChange: event => this.setState({\n          messageSaisi: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), this.state.messagess.map((message, index) => {\n        let linkModify = \"/ModifyMessage/\" + message.id;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          id: this.props.id,\n          className: \"container \",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row pull-left\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \" card border-success mb-3 w-50 col-10\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-header\",\n                children: message.createdAt\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"card-title\",\n                  children: message.auteur\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-text\",\n                  children: message.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"btn-group col-1 h-25 \",\n              role: \"group\",\n              \"aria-label\": \"Button group with nested dropdown\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-dark\",\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"btn-group\",\n                role: \"group\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  id: \"btnGroupDrop4\",\n                  type: \"button\",\n                  className: \"btn btn-dark dropdown-toggle\",\n                  value: message.id,\n                  \"data-bs-toggle\": \"dropdown\",\n                  \"aria-haspopup\": \"true\",\n                  \"aria-expanded\": \"false\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"dropdown-menu\",\n                  \"aria-labelledby\": \"btnGroupDrop4\",\n                  children: [/*#__PURE__*/_jsxDEV(Link, {\n                    to: linkModify,\n                    className: \"dropdown-item\",\n                    href: \"www.google.fr\",\n                    children: \" Modifier le message\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 141,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                    className: \"dropdown-item\",\n                    onClick: () => this.HandleDeleteMessage(message.id),\n                    children: \"Supprimer le message\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true);\n  }\n\n}\n\nexport default PageMessage;","map":{"version":3,"sources":["/Users/kevincarpentier/Library/Mobile Documents/com~apple~CloudDocs/Sites /PRojet 7 v2/frontend/src/container/pageMessages.js"],"names":["React","Entete","PostMessages","axios","Link","PageMessage","Component","state","ilLoaded","messagess","imageSaisi","auteurSaisi","messageSaisi","createdAtSaisi","updatedAtSaisi","componentDidMount","get","then","reponse","data","map","message","id","auteur","photo","createdAt","updatedAt","created","setState","catch","error","console","log","setInterval","Date","now","postMessages","newMessage","image","post","erreur","newState","push","HandleDeleteMessage","messageIndex","findIndex","l","newmessagess","splice","pathWithID","delete","render","event","target","value","index","linkModify","props"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Entete from \"./entete/entete\";\nimport PostMessages from \"./postMessage/postMessage\";\nimport axios from 'axios'\nimport {Link} from 'react-router-dom'\n\nclass PageMessage extends React.Component {\n\n    state = {\n\n        //Affichage des messages\n        ilLoaded : false,\n        messagess : [],\n\n        //Post\n        imageSaisi : \"none\",\n        auteurSaisi : \"Kévin\",\n        messageSaisi : \"\",\n        createdAtSaisi : \"\",\n        updatedAtSaisi : \"\",\n\n    }\n    \n    // Fonction de liaison avec la BDD\n    componentDidMount = () => {\n        // Appeler tous les messages dans la BDD \n        axios.get(\"http://localhost:8000/\")\n        .then(reponse => {\n            const messagess = reponse.data.data.map(message => {\n                return{\n                    id: message.id,\n                    auteur: message.auteur,\n                    photo: message.photo,\n                    message: message.message,\n                    createdAt: message.createdAt,\n                    updatedAt: message.updatedAt,\n                    created : message.created\n                }\n        })\n        this.setState({messagess})\n    })    \n        .catch(error => {\n            console.log(error)\n        })\n\n        // Mettre à jour l'heure actuelle dans les states\n        setInterval( () => {\n            this.setState({\n              createdAtSaisi : Date.now() - (7 * 24 * 60 * 60 * 1000),\n              updatedAtSaisi : Date.now() - (7 * 24 * 60 * 60 * 1000),\n              created : Date.now() - (7 * 24 * 60 * 60 * 1000)\n            })\n          },1000)\n    }\n\n    // Poster un nouveau message \n    postMessages = () => {\n        /* Je prépare mon nouveau message pour les states et la base de données */\n        const newMessage = {\n            message : this.state.messageSaisi,\n            image : this.state.imageSaisi,\n            auteur : this.state.auteurSaisi,\n            createdAt : this.state.createdAtSaisi,\n            updatedAt : this.state.updatedAtSaisi,\n            created : this.state.createdAtSaisi\n        }\n        /* Envoi vers la base de donnée */\n        console.log(newMessage.createdAt) // test test test test tesst \n        axios.post('http://localhost:8000/createMessage/', \n                newMessage\n        )\n        .then(function (reponse) {\n            //On traite la suite une fois la réponse obtenue \n            console.log(reponse);\n        })\n        .catch(function (erreur) {\n            //On traite ici les erreurs éventuellement survenues\n            console.log(erreur);\n        }); \n        console.log('ca fonctionne')\n\n        /* Envoi vers les states */\n        const newState = [...this.state.messagess]\n        newState.push(newMessage)\n\n        this.setState({messagess : newState})\n    }\n\n    // Supprimer un message\n    HandleDeleteMessage = (id) => {\n        const messageIndex = this.state.messagess.findIndex(l => {\n            return l.id === id\n        })\n        console.log(id)\n        // Supprime dans les states\n        const newmessagess = [...this.state.messagess]\n        newmessagess.splice(messageIndex, 1)\n\n        this.setState({messagess : newmessagess})\n        //Supprime dans la base de donnée\n        const pathWithID = `http://localhost:8000/delete/${id}`\n        console.log(pathWithID, \"l'id supprimé :\", id)\n\n        axios.delete(pathWithID, {\n             data: { id: id },\n        });\n    }\n\n    render(){\n        return(\n            <>\n                <Entete />      \n\n                <PostMessages \n                    envoi={() => this.postMessages()}\n                    value={this.state.messageSaisi}\n                    onChange={(event) => this.setState({messageSaisi:event.target.value})}\n\n                />\n                {/* Affichage de tous les messages postés ! */} \n                {this.state.messagess.map((message, index) => {\n                    let linkModify = (\"/ModifyMessage/\"+(message.id))\n                    return(\n                        <div id={this.props.id} className=\"container \">\n                        <div className=\"row pull-left\">\n                                <div className=\" card border-success mb-3 w-50 col-10\"  >\n                                    <div className=\"card-header\">\n                                        {message.createdAt}\n                                    </div>\n                                    <div className=\"card-body\">\n                                        <h4 className=\"card-title\">{message.auteur}</h4>\n                                        <p className=\"card-text\">{message.message}</p>\n                                    </div>\n                                </div>\n                                {/* Bloc menu déroulant des Actions : Modifier et Supprimer */}\n                                <div className=\"btn-group col-1 h-25 \" role=\"group\" aria-label=\"Button group with nested dropdown\">\n                                <button type=\"button\" className=\"btn btn-dark\">Actions</button>\n                                <div className=\"btn-group\" role=\"group\">\n                                    <button id=\"btnGroupDrop4\" type=\"button\" className=\"btn btn-dark dropdown-toggle\" value={message.id} data-bs-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"></button>\n                                    <div className=\"dropdown-menu\" aria-labelledby=\"btnGroupDrop4\" >\n                                        <Link \n                                            to={linkModify} \n                                            className=\"dropdown-item\" \n                                            href=\"www.google.fr\" \n                                            > Modifier le message \n                                        </Link> \n                                        <a className=\"dropdown-item\" onClick={() => this.HandleDeleteMessage(message.id)} >Supprimer le message</a>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    )\n                })}\n            </>\n            )\n        }\n    }\n    \n\n\n\nexport default PageMessage"]},"metadata":{},"sourceType":"module"}