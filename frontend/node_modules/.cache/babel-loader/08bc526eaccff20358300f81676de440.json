{"ast":null,"code":"var _jsxFileName = \"/Users/kevincarpentier/Library/Mobile Documents/com~apple~CloudDocs/Sites /PRojet 7 v2/frontend/src/container/pageMessages.js\";\nimport React from \"react\";\nimport Entete from \"../components/entete/entete\";\nimport PostMessages from \"./postMessage/postMessage\";\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport classes from \"./pageMessages.module.css\";\nimport Connexion from \"./connexion/Connexion.js\";\nimport { Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass PageMessage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      //Affichage des messages\n      ilLoaded: false,\n      messagess: [],\n      //Post\n      imageSaisi: \"\",\n      auteurSaisi: \"Kévin\",\n      messageSaisi: \"\",\n      createdAtSaisi: \"\",\n      updatedAtSaisi: \"\",\n      id: 0,\n      // Gestion des images \n      selectedFile: null,\n      // affichage d'une image dans le post \n      postImage: \"\",\n      // Affichage d'une bannière de message\n      banniere: \"\",\n      // Pour raffrachir la page\n      refresh: false\n    };\n\n    this.refreshPage = () => {\n      window.location.reload(false);\n    };\n\n    this.componentDidMount = () => {\n      // Appeler tous les messages dans la BDD \n      axios.get(\"http://localhost:8000/\").then(reponse => {\n        const messagess = reponse.data.data.map(message => {\n          return {\n            id: message.id,\n            auteur: message.auteur,\n            photo: message.photo,\n            message: message.message,\n            createdAt: message.createdAt,\n            updatedAt: message.updatedAt,\n            created: message.created\n          };\n        });\n        this.setState({\n          messagess\n        });\n      }).catch(error => {\n        console.log(error);\n      }, 1000); // Mettre à jour l'heure actuelle dans les states\n\n      setInterval(() => {\n        this.setState({\n          createdAtSaisi: Date.now() - 7 * 24 * 60 * 60 * 1000,\n          updatedAtSaisi: Date.now() - 7 * 24 * 60 * 60 * 1000,\n          created: Date.now() - 7 * 24 * 60 * 60 * 1000\n        });\n        axios.get(\"http://localhost:8000/\").then(reponse => {\n          const messagess = reponse.data.data.map(message => {\n            return {\n              id: message.id,\n              auteur: message.auteur,\n              photo: message.photo,\n              message: message.message,\n              createdAt: message.createdAt,\n              updatedAt: message.updatedAt,\n              created: message.created\n            };\n          });\n          this.setState({\n            messagess\n          });\n        }).catch(error => {\n          console.log(error);\n        }, 1000);\n      }, 1000);\n    };\n\n    this.postMessages = (imageUploaded, myFormRef) => {\n      if (imageUploaded === \"\") {\n        console.log(\"l'image envoyée \", imageUploaded);\n        /* Je prépare mon nouveau message pour les states et la base de données */\n\n        const newMessage = {\n          message: this.state.messageSaisi,\n          photo: '',\n          auteur: this.state.auteurSaisi,\n          createdAt: this.state.createdAtSaisi,\n          updatedAt: this.state.updatedAtSaisi,\n          created: this.state.createdAtSaisi\n        };\n        /* Envoi vers la base de donnée */\n\n        axios.post('http://localhost:8000/createMessage/', newMessage, {\n          headers: {\n            \"x-access-token\": localStorage.getItem(\"token\"),\n            \"id\": localStorage.getItem(\"id\")\n          }\n        }); // Rafrachissement de la page \n\n        this.setState({\n          refresh: true\n        });\n      } else {\n        // S'il y a une image, j'importe l'image via une seconde route\n        console.log(imageUploaded);\n        const ImageName = Date.now() + imageUploaded.name.split(\" \").join(\"_\");\n        console.log(\"ImageName\", ImageName);\n        const fd = new FormData();\n        fd.append('image', imageUploaded, ImageName);\n        console.log('fd', fd);\n        axios.post(\"http://localhost:8000/upload/\", fd, {\n          headers: {\n            \"token\": localStorage.getItem(\"token\"),\n            id: localStorage.getItem(\"id\")\n          }\n        }).then(res => {\n          // J'utilise le retour de cette image \n          console.log(\"1er retour : \", res);\n          const nomImage = imageUploaded.name;\n          console.log(nomImage);\n          const newMessage = {\n            message: this.state.messageSaisi,\n            photo: res.data.nom,\n            auteur: this.state.auteurSaisi,\n            createdAt: this.state.createdAtSaisi,\n            updatedAt: this.state.updatedAtSaisi,\n            created: this.state.createdAtSaisi\n          };\n          /* Envoi vers la base de donnée */\n\n          axios.post('http://localhost:8000/createMessage/', newMessage, {\n            headers: {\n              \"x-access-token\": localStorage.getItem(\"token\"),\n              \"id\": localStorage.getItem(\"id\")\n            }\n          });\n        });\n      }\n\n      axios.get(\"http://localhost:8000/\").then(reponse => {\n        const messagess = reponse.data.data.map(message => {\n          return {\n            id: message.id,\n            auteur: message.auteur,\n            photo: message.photo,\n            message: message.message,\n            createdAt: message.createdAt,\n            updatedAt: message.updatedAt,\n            created: message.created\n          };\n        });\n        this.setState({\n          messagess\n        });\n      }).catch(error => {\n        console.log(error);\n      }, 1000);\n      this.setState({\n        refresh: true\n      });\n    };\n\n    this.HandleDeleteMessage = id => {\n      const messageIndex = this.state.messagess.findIndex(l => {\n        return l.id === id;\n      });\n      console.log(id); // Supprime dans les states\n\n      const newmessagess = [...this.state.messagess];\n      newmessagess.splice(messageIndex, 1);\n      this.setState({\n        messagess: newmessagess\n      }); //Supprime dans la base de donnée\n\n      const pathWithID = `http://localhost:8000/delete/${id}`;\n      console.log(pathWithID, \"l'id supprimé :\", id);\n      axios.delete(pathWithID, {\n        data: {\n          id: id\n        }\n      }); // J'informe l'utilisateur que le message est bien supprimé\n\n      this.setState({\n        banniere: 'Vous avez bien supprimé ce message'\n      });\n      setTimeout(() => {\n        setTimeout(this.setState({\n          banniere: ''\n        }));\n      }, 3000);\n    };\n\n    this.Connect = data => {\n      axios.post(\"http://localhost:8000/User/login\", data).then(res => {\n        // Enregistrer l'id dans le local storage \n        localStorage.id = res.data.data;\n        localStorage.token = res.data.token; // Modifier le state pour afficher les postes \n\n        this.setState({\n          display: true\n        });\n        console.log(res.request.status);\n\n        if (res.request.status == 401) {\n          console.log('estsdqsdqsdqsdqsdsqd');\n        }\n      }).catch(res => {\n        if (res.request.status === 401) {\n          console.log(\"l'utilisateur n'existe pas\");\n          this.setState({\n            banniere: \"L'utilisateur n'existe pas\"\n          });\n        }\n\n        if (res.request.status === 402) {\n          console.log(\"le mot de passe est incorrect\");\n          this.setState({\n            banniere: \"Vous avez entré un mot de passe erroné\"\n          });\n        }\n\n        console.log(res.request.status);\n      });\n    };\n  }\n\n  render() {\n    if (localStorage.id == null) {\n      return /*#__PURE__*/_jsxDEV(Connexion, {\n        Connect: data => this.Connect(data),\n        banniere: this.state.banniere\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"// Pour raffrachir la page\", this.state.refresh && /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 40\n        }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/accueil\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(Entete, {\n          clic: () => this.deconnect()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 17\n        }, this), this.state.banniere != \"\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"alert alert-dismissible alert-warning\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            class: \"btn-close\",\n            \"data-bs-dismiss\": \"alert\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"mb-0\",\n            children: this.state.banniere\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          ref: el => this.myFormRef = el,\n          children: /*#__PURE__*/_jsxDEV(PostMessages, {\n            envoi: imageUploaded => this.postMessages(imageUploaded),\n            value: this.state.messageSaisi,\n            onChange: event => this.setState({\n              messageSaisi: event.target.value\n            }),\n            banniere: this.state.banniere\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 17\n        }, this), this.state.messagess.slice(0).reverse().map((message, index) => {\n          const lienImage = `http://localhost:8000/images/${message.photo}`;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row pull-left\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \" card border-success mb-3 w-75 col-10\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-header\",\n                  children: message.createdAt.replace(/T/g, \"  _____ \").replace(/.000Z/g, \" \")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"container\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"card-body row\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"col-8\",\n                      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                        className: \"card-title\",\n                        children: message.auteur\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 263,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"card-text\",\n                        children: message.message\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 264,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 262,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"col-4\",\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: lienImage,\n                        alt: \"\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 267,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 266,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"btn-group col-1 h-25 \",\n                role: \"group\",\n                \"aria-label\": \"Button group with nested dropdown\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-dark\",\n                  children: \"Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"btn-group\",\n                  role: \"group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    id: \"btnGroupDrop4\",\n                    type: \"button\",\n                    className: \"btn btn-dark dropdown-toggle\",\n                    value: message.id,\n                    \"data-bs-toggle\": \"dropdown\",\n                    \"aria-haspopup\": \"true\",\n                    \"aria-expanded\": \"false\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"dropdown-menu\",\n                    \"aria-labelledby\": \"btnGroupDrop4\",\n                    children: [/*#__PURE__*/_jsxDEV(Link, {\n                      to: {\n                        pathname: \"/ModifyMessage/\" + message.id\n                      },\n                      className: \"dropdown-item\",\n                      children: \"Modifier le message\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 279,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"dropdown-item\",\n                      onClick: () => this.HandleDeleteMessage(message.id),\n                      children: \"Supprimer le message\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 287,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 278,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 25\n          }, this);\n        })]\n      }, void 0, true);\n    }\n  }\n\n}\n\nexport default PageMessage;","map":{"version":3,"sources":["/Users/kevincarpentier/Library/Mobile Documents/com~apple~CloudDocs/Sites /PRojet 7 v2/frontend/src/container/pageMessages.js"],"names":["React","Entete","PostMessages","axios","Link","classes","Connexion","Redirect","PageMessage","Component","state","ilLoaded","messagess","imageSaisi","auteurSaisi","messageSaisi","createdAtSaisi","updatedAtSaisi","id","selectedFile","postImage","banniere","refresh","refreshPage","window","location","reload","componentDidMount","get","then","reponse","data","map","message","auteur","photo","createdAt","updatedAt","created","setState","catch","error","console","log","setInterval","Date","now","postMessages","imageUploaded","myFormRef","newMessage","post","headers","localStorage","getItem","ImageName","name","split","join","fd","FormData","append","res","nomImage","nom","HandleDeleteMessage","messageIndex","findIndex","l","newmessagess","splice","pathWithID","delete","setTimeout","Connect","token","display","request","status","render","deconnect","el","event","target","value","slice","reverse","index","lienImage","replace","pathname"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Entete from \"../components/entete/entete\";\nimport PostMessages from \"./postMessage/postMessage\";\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport classes from \"./pageMessages.module.css\"\nimport Connexion from \"./connexion/Connexion.js\";\n\nimport {Redirect } from 'react-router-dom'\n\n\nclass PageMessage extends React.Component {\n\n    state = {\n\n        //Affichage des messages\n        ilLoaded : false,\n        messagess : [],\n        \n        //Post\n        imageSaisi : \"\",\n        auteurSaisi : \"Kévin\",\n        messageSaisi : \"\",\n        createdAtSaisi : \"\",\n        updatedAtSaisi : \"\",\n        id : 0,\n\n        // Gestion des images \n        selectedFile : null,\n\n        // affichage d'une image dans le post \n        postImage : \"\",\n\n        // Affichage d'une bannière de message\n        banniere : \"\",\n\n        // Pour raffrachir la page\n        refresh : false\n    }\n     refreshPage = () => {\n        window.location.reload(false);\n      }\n\n    // Fonction de liaison avec la BDD\n    componentDidMount = () => {\n        // Appeler tous les messages dans la BDD \n        axios.get(\"http://localhost:8000/\")\n        .then(reponse => {\n            const messagess = reponse.data.data.map(message => {\n                return{\n                    id: message.id,\n                    auteur: message.auteur,\n                    photo: message.photo,\n                    message: message.message,\n                    createdAt: message.createdAt,\n                    updatedAt: message.updatedAt,\n                    created : message.created\n                }\n        })\n        this.setState({messagess})\n    })    \n        .catch(error => {\n            console.log(error)\n        },1000)\n\n        // Mettre à jour l'heure actuelle dans les states\n        setInterval( () => {\n            this.setState({\n              createdAtSaisi : Date.now() - (7 * 24 * 60 * 60 * 1000),\n              updatedAtSaisi : Date.now() - (7 * 24 * 60 * 60 * 1000),\n              created : Date.now() - (7 * 24 * 60 * 60 * 1000)\n            })\n\n            axios.get(\"http://localhost:8000/\")\n            .then(reponse => {\n                const messagess = reponse.data.data.map(message => {\n                    return{\n                        id: message.id,\n                        auteur: message.auteur,\n                        photo: message.photo,\n                        message: message.message,\n                        createdAt: message.createdAt,\n                        updatedAt: message.updatedAt,\n                        created : message.created,\n                    }\n            })\n            this.setState({messagess})\n        })    \n            .catch(error => {\n                console.log(error)\n            },1000)\n          },1000)\n    }\n\n\n    // Poster un nouveau message \n    postMessages = (imageUploaded, myFormRef) => {\n        if(imageUploaded === \"\"){\n            console.log(\"l'image envoyée \", imageUploaded)\n            /* Je prépare mon nouveau message pour les states et la base de données */\n            const newMessage = {\n                message : this.state.messageSaisi,\n                photo : '',\n                auteur : this.state.auteurSaisi,\n                createdAt : this.state.createdAtSaisi,\n                updatedAt : this.state.updatedAtSaisi,\n                created : this.state.createdAtSaisi,\n            }\n            /* Envoi vers la base de donnée */\n            \n            axios.post('http://localhost:8000/createMessage/', newMessage, {headers: {\"x-access-token\": localStorage.getItem(\"token\"), \"id\": localStorage.getItem(\"id\")}})    \n            // Rafrachissement de la page \n            this.setState({refresh : true})\n                 } else { // S'il y a une image, j'importe l'image via une seconde route\n                console.log(imageUploaded)\n                const ImageName = Date.now() + imageUploaded.name.split(\" \").join(\"_\")\n                console.log(\"ImageName\" , ImageName)\n                const fd = new FormData()\n                fd.append('image', imageUploaded, ImageName)\n                console.log('fd', fd)\n                               \n                axios.post(\"http://localhost:8000/upload/\", fd , {headers: {\"token\": localStorage.getItem(\"token\"), id: localStorage.getItem(\"id\")}})\n                    .then(res => { // J'utilise le retour de cette image \n                        console.log(\"1er retour : \",res)\n                        const nomImage = imageUploaded.name\n                        console.log(nomImage)\n                            const newMessage = {\n                                message : this.state.messageSaisi,\n                                photo : res.data.nom,\n                                auteur : this.state.auteurSaisi,\n                                createdAt : this.state.createdAtSaisi,\n                                updatedAt : this.state.updatedAtSaisi,\n                                created : this.state.createdAtSaisi\n                            }\n                            /* Envoi vers la base de donnée */\n                            axios.post('http://localhost:8000/createMessage/', newMessage, {headers: {\"x-access-token\": localStorage.getItem(\"token\"), \"id\": localStorage.getItem(\"id\")} } ) \n                    })\n                }\n                axios.get(\"http://localhost:8000/\")\n                .then(reponse => {\n                    const messagess = reponse.data.data.map(message => {\n                        return{\n                            id: message.id,\n                            auteur: message.auteur,\n                            photo: message.photo,\n                            message: message.message,\n                            createdAt: message.createdAt,\n                            updatedAt: message.updatedAt,\n                            created : message.created\n                        }\n                })\n                this.setState({messagess})\n                })    \n                .catch(error => {\n                    console.log(error)\n                },1000)\n                this.setState({refresh : true})\n\n            }                           \n\n    // Supprimer un message\n    HandleDeleteMessage = (id) => {\n        const messageIndex = this.state.messagess.findIndex(l => {\n            return l.id === id\n        })\n        console.log(id)\n        // Supprime dans les states\n        const newmessagess = [...this.state.messagess]\n        newmessagess.splice(messageIndex, 1)\n\n        this.setState({messagess : newmessagess})\n        //Supprime dans la base de donnée\n        const pathWithID = `http://localhost:8000/delete/${id}`\n        console.log(pathWithID, \"l'id supprimé :\", id)\n\n        axios.delete(pathWithID, {\n             data: { id: id },\n        });\n        // J'informe l'utilisateur que le message est bien supprimé\n        this.setState({banniere : 'Vous avez bien supprimé ce message'})\n        setTimeout(() => {\n            setTimeout(this.setState({banniere : ''}))\n        }, 3000);\n\n    }\n\n    Connect = (data) => {\n        axios.post(\"http://localhost:8000/User/login\", data)\n            .then(res => {           \n                // Enregistrer l'id dans le local storage \n                localStorage.id = res.data.data\n                localStorage.token = res.data.token\n                // Modifier le state pour afficher les postes \n                this.setState({display : true})\n                console.log(res.request.status)\n                if(res.request.status == 401) \n                {\n                    console.log('estsdqsdqsdqsdqsdsqd')\n                }\n          })  \n          .catch(res => {\n            if(res.request.status === 401) {\n                console.log(\"l'utilisateur n'existe pas\")\n                this.setState({banniere : \"L'utilisateur n'existe pas\"})\n            }\n            if(res.request.status === 402) {\n                console.log(\"le mot de passe est incorrect\")\n                this.setState({banniere : \"Vous avez entré un mot de passe erroné\"})\n            }\n            console.log(res.request.status)\n          })\n    }\n\n    render(){\n        if(localStorage.id == null){ \n            return (    \n                <Connexion \n                    Connect={(data) => this.Connect(data)}\n                    banniere={this.state.banniere}\n                />\n            )\n        }else {\n\n        return(\n            <>\n                // Pour raffrachir la page \n                {this.state.refresh && <Redirect to='/' />}\n                {<Redirect to='/accueil' />}\n\n                <Entete \n                    clic={() => this.deconnect()}\n                /> \n            {this.state.banniere != \"\" \n            &&             \n                <div class=\"alert alert-dismissible alert-warning\">\n                    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\"></button>\n                    <p class=\"mb-0\">{this.state.banniere}</p>\n                </div>\n            }\n\n                <form ref={(el) => this.myFormRef = el}>\n                    <PostMessages \n                        envoi={(imageUploaded) => this.postMessages(imageUploaded)}\n                        value={this.state.messageSaisi}\n                        onChange={(event) => this.setState({messageSaisi:event.target.value})}\n                        banniere={this.state.banniere}\n                    />\n                </form>        \n\n                {/* Affichage de tous les messages postés du plus récent au plus vieux ! */} \n                {this.state.messagess.slice(0).reverse().map((message, index) => {\n                    const lienImage = `http://localhost:8000/images/${message.photo}`\n                    return(\n                        <div className=\"container\">\n                            <div className=\"row pull-left\">\n                                <div className=\" card border-success mb-3 w-75 col-10\"  >\n                                    <div className=\"card-header\">\n                                        { message.createdAt.replace(/T/g, \"  _____ \").replace(/.000Z/g, \" \")}\n                                    </div>\n                                    <div className=\"container\">\n                                        <div className=\"card-body row\">\n                                            <div className=\"col-8\">\n                                                <h4 className=\"card-title\">{message.auteur}</h4>\n                                                <p className=\"card-text\">{message.message}</p>\n                                            </div>\n                                            <div className=\"col-4\">\n                                                <img src={lienImage} alt=\"\" />\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </div>\n                                {/* Bloc menu déroulant des Actions : Modifier et Supprimer */}\n                                <div className=\"btn-group col-1 h-25 \" role=\"group\" aria-label=\"Button group with nested dropdown\">\n                                <button type=\"button\" className=\"btn btn-dark\">Actions</button>\n                                <div className=\"btn-group\" role=\"group\">\n                                    <button id=\"btnGroupDrop4\" type=\"button\" className=\"btn btn-dark dropdown-toggle\" value={message.id} data-bs-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"></button>\n                                    <div className=\"dropdown-menu\" aria-labelledby=\"btnGroupDrop4\" >\n                                        <Link \n                                            to={{\n                                                pathname : \"/ModifyMessage/\"+(message.id),\n                                                }} \n                                            className=\"dropdown-item\" \n                                            >\n                                            Modifier le message \n                                        </Link> \n                                        <button className=\"dropdown-item\"  onClick={() => this.HandleDeleteMessage(message.id)} >Supprimer le message</button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div> \n                    )\n                })}\n            </>\n            )\n        }    \n    }\n}\n\n\n\nexport default PageMessage"]},"metadata":{},"sourceType":"module"}