{"ast":null,"code":"var _jsxFileName = \"/Users/kevincarpentier/Library/Mobile Documents/com~apple~CloudDocs/Sites /PRojet 7 v2/frontend/src/container/modifyMessage/modifyMessage.js\";\nimport React from \"react\";\nimport Bouton from \"../../components/bouton/bouton\";\nimport Input from \"../../components/bouton/input\";\nimport classes from \"./modifyMessage.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ModifyMessage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      messagetoModify: {\n        id: 74,\n        auteur: \"\",\n        photo: \"\",\n        message: \"\",\n        createdAt: \"\",\n        updatedAt: \"\",\n        created: \"\"\n      }\n    };\n\n    this.componentDidMount = () => {\n      // Appeler tous les messages dans la BDD et les rajouter dans les states\n      const nouveauState = [...this.state.messageToModify];\n      axios.get(`http://localhost:8000/byID/${this.state.messagetoModify.id}`).then(reponse => {\n        console.log(reponse.data.data.message); // Rajouter les données récupérées dans les states\n\n        const newStates = [...this.state.messagetoModify];\n        newStates.id = reponse.data.data.auteur;\n        console.log(reponse.data.data.message);\n        newStates.auteur = reponse.data.data.id;\n        newStates.photo = reponse.data.data.photo;\n        newStates.message = reponse.data.data.message;\n        newStates.createdAt = reponse.data.data.createdAt;\n        newStates.updatedAt = Date.now() - 7 * 24 * 60 * 60 * 1000;\n        this.setState({\n          messagetoModify: newStates\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n  }\n\n  render() {\n    const classBloc = `${classes.modifyMessage} container w-100 `;\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classBloc,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"exampleTextarea\",\n          className: \"form-label mt-4\",\n          children: \"Ecrivez votre message et cliquez sur postez pour qu'il se rajoute aux posts du forum\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group col-8\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"form-control\",\n            id: \"exampleTextarea\",\n            rows: \"3\",\n            value: this.state.message,\n            onChange: event => this.setState({\n              message: event.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group col-4\",\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            children: \" Parcourir\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Bouton, {\n            couleur: \"primary\",\n            type: \"button\",\n            clic: () => this.props.confirmerModification(),\n            children: \" Envoyer \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }, this);\n  }\n\n}\n\nexport default ModifyMessage;","map":{"version":3,"sources":["/Users/kevincarpentier/Library/Mobile Documents/com~apple~CloudDocs/Sites /PRojet 7 v2/frontend/src/container/modifyMessage/modifyMessage.js"],"names":["React","Bouton","Input","classes","ModifyMessage","Component","state","messagetoModify","id","auteur","photo","message","createdAt","updatedAt","created","componentDidMount","nouveauState","messageToModify","axios","get","then","reponse","console","log","data","newStates","Date","now","setState","catch","error","render","classBloc","modifyMessage","event","target","value","props","confirmerModification"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Bouton from \"../../components/bouton/bouton\";\nimport Input from \"../../components/bouton/input\";\nimport classes from \"./modifyMessage.module.css\"\n\nclass ModifyMessage extends React.Component {\n\n    state = {\n            messagetoModify : {\n                id : 74,\n                auteur: \"\",\n                photo: \"\",\n                message: \"\",\n                createdAt: \"\",\n                updatedAt: \"\",\n                created : \"\"\n            }\n    }\n        // Fonction de liaison avec la BDD\n           componentDidMount = () => {\n \n            // Appeler tous les messages dans la BDD et les rajouter dans les states\n\n\n            const nouveauState = [...this.state.messageToModify]\n \n\n             axios.get(`http://localhost:8000/byID/${this.state.messagetoModify.id}`)\n            .then(reponse => {\n                console.log(reponse.data.data.message)\n\n                // Rajouter les données récupérées dans les states\n                const newStates = [...this.state.messagetoModify]\n\n                newStates.id = (reponse.data.data.auteur)\n                console.log(reponse.data.data.message)\n                newStates.auteur = (reponse.data.data.id)\n                newStates.photo = (reponse.data.data.photo)\n                newStates.message = (reponse.data.data.message)\n                newStates.createdAt = (reponse.data.data.createdAt)\n                newStates.updatedAt = Date.now() - (7 * 24 * 60 * 60 * 1000)\n\n                this.setState({messagetoModify : newStates})\n            })\n\n\n            .catch(error => {\n                console.log(error)\n            })     \n    }\n\n\n            render(){\n                const classBloc = `${classes.modifyMessage} container w-100 `\n                return (\n                    <form className={classBloc}>\n                        <div className='row'>\n                        <label htmlFor=\"exampleTextarea\" className=\"form-label mt-4\">Ecrivez votre message et cliquez sur postez pour qu'il se rajoute aux posts du forum</label>\n                            <div className=\"form-group col-8\">\n                                <textarea \n                                className=\"form-control\" \n                                id=\"exampleTextarea\" rows=\"3\" \n                                value={this.state.message}\n                                onChange={(event) => this.setState({message:event.target.value})}\n                                />\n                            </div>\n                            <div className=\"form-group col-4\">\n                                <Input> Parcourir</Input>\n                                <Bouton couleur=\"primary\" type=\"button\" clic={() => this.props.confirmerModification()}> Envoyer </Bouton>\n                            </div>\n                        </div>\n                    </form>\n                )\n            }\n}\n\nexport default ModifyMessage"]},"metadata":{},"sourceType":"module"}