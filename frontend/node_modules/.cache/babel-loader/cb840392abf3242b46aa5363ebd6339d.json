{"ast":null,"code":"var _jsxFileName = \"/Users/kevincarpentier/Library/Mobile Documents/com~apple~CloudDocs/Sites /PRojet 7 v2/frontend/src/container/connexion/inscription/inscription.js\";\nimport React from \"react\";\nimport Entete from \"../../../components/entete/entete\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router\";\nimport { withFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Inscription extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      fileSelected: \"\",\n      fileSelectedName: \"\"\n    };\n\n    this.fileSelected = event => {\n      // mettre l'image dans le state pour l'affichage de l'aperçu\n      this.props.values.fileSelected = URL.createObjectURL(event.target.files[0]); // mettre le nom de l'image dans le state pour le renvoyer au composant supérieur \n\n      const File = event.target.files[0];\n      this.props.values.fileSelected = {\n        File\n      };\n    };\n\n    this.handleInscription = () => {\n      // enregistrement du profil sans photo \n      if (this.state.fileSelected == \"\") {\n        const newUser = {\n          adresseMail: this.state.adresseMail,\n          pseudonyme: this.state.pseudonyme,\n          password: this.state.password,\n          textPresentation: this.state.textPresentation,\n          photoPresentation: \"photoStandard.jpg\",\n          sexe: this.state.sexe\n        }; // Vérifier que l'adresse mail ne soit pas déjà présente dans notre BDD \n        // Vérifier que le nom d'utilisateur n'existe pas déjà\n        // Vérifier que les 2 mots de passes correspondent\n\n        axios.post(\"http://localhost:8000/User/new\", newUser).then(res => {\n          if (res.status === 200) {\n            /* this.props.history.replace(\"/\") */\n            window.location.replace(\"http://localhost:3000/\");\n          }\n        });\n      } // Enregistrement du profil avec sa Photo\n      else {\n        const ImageName = Date.now() + this.state.fileSelectedName.name.split(\" \").join(\"_\");\n        console.log(\"ImageName\", ImageName);\n        const fd = new FormData();\n        fd.append('image', this.state.fileSelectedName, ImageName);\n        console.log('fd', fd);\n        axios.post(\"http://localhost:8000/uploadPhoto/\", fd).then(res => {\n          // J'utilise le retour de cette image \n          console.log(\"1er retour : \", res);\n          const nomImage = this.state.fileSelected.name;\n          console.log(nomImage);\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n              children: \"INSCRIPTION - NOUVEL UTILISATEUR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"exampleInputEmail1\",\n                className: \"form-label mt-4\",\n                children: \"Adresse Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: this.props.handleChange,\n                onBlur: this.props.handleBlur,\n                value: this.props.values.adresseMail,\n                name: \"adresseMail\",\n                type: \"email\",\n                className: \"form-control\",\n                id: \"exampleInputEmail1\",\n                \"aria-describedby\": \"emailHelp\",\n                placeholder: \"example@mail.com\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 29\n              }, this), this.props.touched.adresseMail && this.props.errors.adresseMail && /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: \"red\"\n                },\n                children: [\" \", this.props.errors.adresseMail]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 97\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"pseudonyme\",\n                className: \"form-label mt-4\",\n                children: \"Pseudonyme\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: this.props.handleChange,\n                onBlur: this.props.handleBlur,\n                value: this.props.values.pseudonyme,\n                name: \"pseudonyme\",\n                type: \"email\",\n                className: \"form-control\",\n                id: \"exampleInputEmail1\",\n                \"aria-describedby\": \"emailHelp\",\n                placeholder: \"example@mail.com\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 29\n              }, this), this.props.touched.pseudonyme && this.props.errors.pseudonyme && /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: \"red\"\n                },\n                children: [\" \", this.props.errors.pseudonyme]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 96\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"exampleInputPassword\",\n                className: \"form-label mt-4\",\n                children: \"Mot de passe\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: this.props.handleChange,\n                onBlur: this.props.handleBlur,\n                value: this.props.values.password,\n                name: \"password\",\n                type: \"password\",\n                className: \"form-control\",\n                id: \"exampleInputPassword1\",\n                placeholder: \"azerTY%1230e\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 29\n              }, this), this.props.touched.password && this.props.errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: \"red\"\n                },\n                children: [\" \", this.props.errors.password]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 91\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"exampleInputPassword2\",\n                className: \"form-label mt-4\",\n                children: \"Confirmez votre mot de passe\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: this.props.handleChange,\n                onBlur: this.props.handleBlur,\n                value: this.props.values.password2,\n                name: \"password2\",\n                type: \"password\",\n                className: \"form-control\",\n                id: \"exampleInputPassword1\",\n                placeholder: \"azerTY%1230e\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 29\n              }, this), this.props.touched.password2 && this.props.errors.password2 && /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: \"red\"\n                },\n                children: [\" \", this.props.errors.password2]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 93\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"exampleTextarea\",\n                className: \"form-label mt-4\",\n                children: \"textPresentation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                onChange: this.props.handleChange,\n                onBlur: this.props.handleBlur,\n                value: this.props.values.textPresentation,\n                name: \"textPresentation\",\n                className: \"form-control\",\n                id: \"exampleTextarea\",\n                rows: \"3\",\n                placeholder: \"Parlez nous un petit peu de vous\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"formFile\",\n                className: \"form-label mt-4\",\n                children: \"Photo de profil\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: event => this.fileSelected(event),\n                onBlur: this.props.handleBlur,\n                name: \"photo\",\n                className: \"form-control\",\n                type: \"file\",\n                id: \"formFile\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: this.state.fileSelected,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n                className: \"mt-4\",\n                children: \"Sexe\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-check\",\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-check-label\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    value: \"Homme\",\n                    onChange: this.props.handleChange,\n                    type: \"radio\",\n                    className: \"form-check-input\",\n                    name: \"sexe\",\n                    id: \"optionsRadios1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 37\n                  }, this), \"Homme\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-check\",\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-check-label\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    value: \"Femme\",\n                    onChange: this.props.handleChange,\n                    type: \"radio\",\n                    className: \"form-check-input\",\n                    name: \"sexe\",\n                    id: \"optionsRadios2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 37\n                  }, this), \"Femme\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 29\n              }, this), this.props.touched.sexe && this.props.errors.sexe && /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: \"red\"\n                },\n                children: [\" \", this.props.errors.sexe]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 83\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              onClick: this.props.handleSubmit,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default withFormik({\n  mapPropsToValues: () => ({\n    adresseMail: \"\",\n    pseudonyme: \"\",\n    password: \"\",\n    password2: \"\",\n    textPresentation: \"\",\n    photo: \"\",\n    sexe: \"\"\n  }),\n  validationSchema: Yup.object().shape({\n    adresseMail: Yup.string().email(\"ceci n'est pas un type d'email reconnu\").required(\"l'adresse mail est obligatoire\"),\n    pseudonyme: Yup.string().min(3, \"Pas assez de caractères\").max(16, \"Trop de caractères\").required(\"le pseudonyme est obligatoire\"),\n    password: Yup.string().min(3, \"Pas assez de caractères\").max(16, \"Trop de caractères\").required(\"le mot de passe est obligatoire\"),\n    password2: Yup.string().oneOf([Yup.ref('password'), null], 'Les 2 mots de passe ne correspondent pas').required(\"la confirmation du mot de passe est obligatoire\"),\n    textPresentation: Yup.string().max(256, \"votre description est trop grande\"),\n    sexe: Yup.string().required(\"merci de renseigner votre sexe\")\n  }),\n  handleSubmit: (values, {\n    props\n  }) => {\n    if (!values.fileSelected) {\n      const newUser = {\n        \"adresseMail\": values.adresseMail,\n        \"pseudonyme\": values.pseudonyme,\n        \"password\": values.password,\n        \"textPresentation\": values.textPresentation,\n        \"photoPresentation\": values.photo,\n        \"sexe\": 0\n      }; // Vérifier que l'adresse mail ne soit pas déjà présente dans notre BDD \n      // Vérifier que le nom d'utilisateur n'existe pas déjà\n      // Vérifier que les 2 mots de passes correspondent \n\n      axios.post(\"http://localhost:8000/User/new\", newUser).then(res => {\n        console.log(res.status);\n\n        if (res.status === 200) {\n          /* this.props.history.replace(\"/\") */\n          window.location.replace(\"http://localhost:3000/\");\n        }\n      });\n    }\n\n    if (values.fileSelected) {\n      const ImageName = Date.now() + values.fileSelected.File.name.split(\" \").join(\"_\");\n      console.log(\"ImageName\", ImageName);\n      const fd = new FormData();\n      fd.append('image', values.fileSelected.File, ImageName);\n      console.log('fd', fd);\n      axios.post(\"http://localhost:8000/uploadPhoto/\", fd).then(res => {\n        // J'utilise le retour de cette image \n        console.log(\"1er retour : \", res);\n        const nomImage = values.fileSelected.File.name;\n        console.log(nomImage);\n        const newUser = {\n          \"adresseMail\": values.adresseMail,\n          \"pseudonyme\": values.pseudonyme,\n          \"password\": values.password,\n          \"textPresentation\": values.textPresentation,\n          \"photoPresentation\": res.data.nom,\n          \"sexe\": 0\n        }; // Vérifier que l'adresse mail ne soit pas déjà présente dans notre BDD \n        // Vérifier que le nom d'utilisateur n'existe pas déjà\n        // Vérifier que les 2 mots de passes correspondent \n\n        axios.post(\"http://localhost:8000/User/new\", newUser).then(res => {\n          console.log(res.status);\n\n          if (res.status === 200) {\n            /* this.props.history.replace(\"/\") */\n            window.location.replace(\"http://localhost:3000/\");\n          }\n        });\n      }); ///\n    }\n  }\n})(Inscription);","map":{"version":3,"sources":["/Users/kevincarpentier/Library/Mobile Documents/com~apple~CloudDocs/Sites /PRojet 7 v2/frontend/src/container/connexion/inscription/inscription.js"],"names":["React","Entete","axios","Redirect","withFormik","Yup","Inscription","Component","state","fileSelected","fileSelectedName","event","props","values","URL","createObjectURL","target","files","File","handleInscription","newUser","adresseMail","pseudonyme","password","textPresentation","photoPresentation","sexe","post","then","res","status","window","location","replace","ImageName","Date","now","name","split","join","console","log","fd","FormData","append","nomImage","render","handleChange","handleBlur","touched","errors","color","password2","handleSubmit","mapPropsToValues","photo","validationSchema","object","shape","string","email","required","min","max","oneOf","ref","data","nom"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Entete from \"../../../components/entete/entete\";\nimport axios from \"axios\"\nimport { Redirect } from \"react-router\";\nimport {withFormik} from \"formik\"\nimport * as Yup from \"yup\"\n\nclass Inscription extends React.Component {\n\n    state = {\n        fileSelected : \"\",\n        fileSelectedName : \"\"\n    }  \n\n    fileSelected = (event) => {\n        // mettre l'image dans le state pour l'affichage de l'aperçu\n       this.props.values.fileSelected = URL.createObjectURL(event.target.files[0])\n\n       // mettre le nom de l'image dans le state pour le renvoyer au composant supérieur \n       const File = (event.target.files[0])\n       this.props.values.fileSelected = {\n        File\n       } \n    }\n\n    handleInscription = () => {\n        // enregistrement du profil sans photo \n        if(this.state.fileSelected == \"\"){\n            const newUser = {\n                adresseMail : this.state.adresseMail,\n                pseudonyme : this.state.pseudonyme,\n                password : this.state.password,\n                textPresentation: this.state.textPresentation,\n                photoPresentation: \"photoStandard.jpg\",\n                sexe: this.state.sexe,\n            }   \n            // Vérifier que l'adresse mail ne soit pas déjà présente dans notre BDD \n                \n            // Vérifier que le nom d'utilisateur n'existe pas déjà\n    \n            // Vérifier que les 2 mots de passes correspondent\n            axios.post(\"http://localhost:8000/User/new\", newUser)\n            .then (res => {\n                if(res.status === 200){\n                    /* this.props.history.replace(\"/\") */\n                    window.location.replace(\"http://localhost:3000/\")            \n                }\n            })\n        }\n        // Enregistrement du profil avec sa Photo\n        else{\n\n            const ImageName = Date.now() + this.state.fileSelectedName.name.split(\" \").join(\"_\")\n            console.log(\"ImageName\" , ImageName)\n            const fd = new FormData()\n            fd.append('image', this.state.fileSelectedName, ImageName)\n            console.log('fd', fd)\n            \n            axios.post(\"http://localhost:8000/uploadPhoto/\", fd )\n            .then(res => { // J'utilise le retour de cette image \n                console.log(\"1er retour : \",res)\n                const nomImage = this.state.fileSelected.name\n                console.log(nomImage)\n            })\n        }\n\n\n    } \n\n    render(){\n        return(\n            <>\n            <div className=\"container\">\n                <form>\n                    <fieldset>\n                        <legend>INSCRIPTION - NOUVEL UTILISATEUR</legend>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"exampleInputEmail1\" className=\"form-label mt-4\">Adresse Email</label>\n                            <input onChange={this.props.handleChange} onBlur={this.props.handleBlur} value={this.props.values.adresseMail} name=\"adresseMail\"  type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"example@mail.com\"/>\n                            {this.props.touched.adresseMail && this.props.errors.adresseMail && <span style={{color:\"red\"}}> {this.props.errors.adresseMail}</span>}\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"pseudonyme\" className=\"form-label mt-4\">Pseudonyme</label>\n                            <input onChange={this.props.handleChange} onBlur={this.props.handleBlur} value={this.props.values.pseudonyme} name=\"pseudonyme\" type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"example@mail.com\"/>\n                            { this.props.touched.pseudonyme && this.props.errors.pseudonyme && <span style={{color:\"red\"}}> {this.props.errors.pseudonyme}</span>}\n\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"exampleInputPassword\" className=\"form-label mt-4\">Mot de passe</label>\n                            <input onChange={this.props.handleChange} onBlur={this.props.handleBlur} value={this.props.values.password} name=\"password\"  type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"azerTY%1230e\"/>\n                            {this.props.touched.password && this.props.errors.password && <span style={{color:\"red\"}}> {this.props.errors.password}</span>}\n\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"exampleInputPassword2\" className=\"form-label mt-4\">Confirmez votre mot de passe</label>\n                            <input onChange={this.props.handleChange} onBlur={this.props.handleBlur} value={this.props.values.password2} name=\"password2\" type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"azerTY%1230e\"/>\n                            {this.props.touched.password2 && this.props.errors.password2 && <span style={{color:\"red\"}}> {this.props.errors.password2}</span>}\n\n                        </div>\n                        <div className=\"form-group\">\n                        </div>\n                        <div className=\"form-group\">\n                            <label  htmlFor=\"exampleTextarea\" className=\"form-label mt-4\" >textPresentation</label>\n                            <textarea onChange={this.props.handleChange} onBlur={this.props.handleBlur} value={this.props.values.textPresentation} name=\"textPresentation\" className=\"form-control\" id=\"exampleTextarea\" rows=\"3\" placeholder=\"Parlez nous un petit peu de vous\"></textarea>\n                        </div>\n                        {/* Sous bloc photo de profil */}\n                        <div className=\"form-group\">\n                            <label htmlFor=\"formFile\" className=\"form-label mt-4\">Photo de profil</label>\n                            <input onChange={event => this.fileSelected(event)} onBlur={this.props.handleBlur} name=\"photo\" className=\"form-control\" type=\"file\" id=\"formFile\"/>\n                            <img src={this.state.fileSelected} alt=\"\" />\n                        </div>\n                        <fieldset className=\"form-group\">\n                            <legend className=\"mt-4\">Sexe</legend>\n                            <div className=\"form-check\">\n                                <label className=\"form-check-label\">\n                                    <input value=\"Homme\" onChange={this.props.handleChange} type=\"radio\" className=\"form-check-input\" name=\"sexe\" id=\"optionsRadios1\" />\n                                        Homme\n                                </label>\n                            </div>\n                            <div className=\"form-check\">\n                                <label className=\"form-check-label\">\n                                    <input value=\"Femme\"  onChange={this.props.handleChange} type=\"radio\" className=\"form-check-input\" name=\"sexe\" id=\"optionsRadios2\" />\n                                        Femme\n                                </label>\n                            </div>\n                            {this.props.touched.sexe && this.props.errors.sexe && <span style={{color:\"red\"}}> {this.props.errors.sexe}</span>}\n                        </fieldset>\n\n                        <button type=\"submit\" className=\"btn btn-primary\" onClick={this.props.handleSubmit}>Submit</button>\n                    </fieldset>\n                </form>\n            </div>\n        </>\n        )\n    }\n}\n\nexport default withFormik({\n    mapPropsToValues : () => ({\n        adresseMail : \"\",\n        pseudonyme : \"\",\n        password : \"\", \n        password2: \"\", \n        textPresentation : \"\", \n        photo : \"\", \n        sexe : \"\",\n    }),\n    validationSchema : Yup.object().shape({\n        adresseMail : Yup.string()\n        .email(\"ceci n'est pas un type d'email reconnu\")\n        .required(\"l'adresse mail est obligatoire\"),\n        pseudonyme : Yup.string()\n        .min(3, \"Pas assez de caractères\")\n        .max(16, \"Trop de caractères\")\n        .required(\"le pseudonyme est obligatoire\"),\n        password : Yup.string()\n        .min(3, \"Pas assez de caractères\")\n        .max(16, \"Trop de caractères\")\n        .required(\"le mot de passe est obligatoire\"),\n        password2: Yup.string()\n        .oneOf([Yup.ref('password'), null], 'Les 2 mots de passe ne correspondent pas')\n        .required(\"la confirmation du mot de passe est obligatoire\"),\n        textPresentation: Yup.string()\n        .max(256, \"votre description est trop grande\"),\n        sexe: Yup.string()\n        .required(\"merci de renseigner votre sexe\")\n        })  \n\n    ,\n    handleSubmit:(values, {props}) => {\n        if(!values.fileSelected){\n            const newUser = {\n                \"adresseMail\" : values.adresseMail,\n                \"pseudonyme\" : values.pseudonyme,\n                \"password\" : values.password,\n                \"textPresentation\": values.textPresentation,\n                \"photoPresentation\": values.photo,\n                \"sexe\": 0,\n            }   \n            // Vérifier que l'adresse mail ne soit pas déjà présente dans notre BDD \n                \n            // Vérifier que le nom d'utilisateur n'existe pas déjà\n    \n            // Vérifier que les 2 mots de passes correspondent \n    \n            axios.post(\"http://localhost:8000/User/new\", newUser)\n            .then (res => {\n                console.log(res.status)\n                if(res.status === 200){\n                    /* this.props.history.replace(\"/\") */\n                    window.location.replace(\"http://localhost:3000/\")            \n                }\n            })\n        }\n        if(values.fileSelected) {\n\n                const ImageName = Date.now() + values.fileSelected.File.name.split(\" \").join(\"_\")\n                console.log(\"ImageName\" , ImageName)\n                const fd = new FormData()\n                fd.append('image', values.fileSelected.File, ImageName)\n                console.log('fd', fd)\n                \n                axios.post(\"http://localhost:8000/uploadPhoto/\", fd )\n                .then(res => { // J'utilise le retour de cette image \n                    console.log(\"1er retour : \",res)\n                    const nomImage = values.fileSelected.File.name\n                    console.log(nomImage)\n\n                    const newUser = {\n                        \"adresseMail\" : values.adresseMail,\n                        \"pseudonyme\" : values.pseudonyme,\n                        \"password\" : values.password,\n                        \"textPresentation\": values.textPresentation,\n                        \"photoPresentation\": res.data.nom,\n                        \"sexe\": 0,\n                    }   \n                    // Vérifier que l'adresse mail ne soit pas déjà présente dans notre BDD \n                        \n                    // Vérifier que le nom d'utilisateur n'existe pas déjà\n            \n                    // Vérifier que les 2 mots de passes correspondent \n            \n                    axios.post(\"http://localhost:8000/User/new\", newUser)\n                    .then (res => {\n                        console.log(res.status)\n                        if(res.status === 200){\n                            /* this.props.history.replace(\"/\") */\n                            window.location.replace(\"http://localhost:3000/\")            \n                        }\n                    })\n                })\n                ///\n\n        }\n    }\n\n    \n    })(Inscription)"]},"metadata":{},"sourceType":"module"}