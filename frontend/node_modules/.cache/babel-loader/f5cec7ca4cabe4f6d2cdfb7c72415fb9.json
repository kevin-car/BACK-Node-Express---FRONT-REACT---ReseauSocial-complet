{"ast":null,"code":"var _jsxFileName = \"/Users/kevincarpentier/Library/Mobile Documents/com~apple~CloudDocs/Sites /PRojet 7 v2/frontend/src/container/modifyMessage/modifyMessage.js\";\nimport React from \"react\";\nimport Bouton from \"../../components/bouton/bouton\";\nimport classes from \"./modifyMessage.module.css\";\nimport Entete from \"../../components/entete/entete\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { withFormik } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ModifyMessage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      message: \"\",\n      fileSelected: \"\",\n      fileSelectedName: \"\"\n    };\n\n    this.fileSelected = event => {\n      // mettre l'image dans le state pour l'affichage de l'aperçu\n      this.setState({\n        fileSelected: URL.createObjectURL(event.target.files[0])\n      }); // mettre le nom de l'image dans le state pour le renvoyer au composant supérieur \n\n      const File = event.target.files[0];\n      this.setState({\n        fileSelectedName: File\n      });\n    };\n\n    this.componentDidMount = () => {\n      let ID = this.props.match.params.id; // Appeler tous les messages dans la BDD \n\n      axios.get(`http://localhost:8000/byID/${ID}`).then(reponse => {\n        // J'ajoute toutes les données, l'ID récupéré du paramètre d'URL, le reste du serveur\n        this.props.values.id = ID;\n        this.props.values.auteur = reponse.data.data.auteur;\n        this.props.values.photo = reponse.data.data.photo;\n        this.props.values.message = reponse.data.data.message;\n        this.props.values.createdAt = reponse.data.data.createdAt;\n        this.props.values.updatedAt = reponse.data.data.updatedAt; // Je mets à jour mes states avec les données que j'ai récupérées du serveur\n\n        const stateUpdated = {\n          id: this.props.values.id,\n          auteur: this.props.values.auteur,\n          photo: this.props.values.photo,\n          message: this.props.values.message,\n          updatedAt: this.props.values.updatedAt\n        };\n        this.setState(stateUpdated);\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.handleDeletePhoto = () => {\n      // 1 Récupération de l'id placé en fin d'URL\n      // Supprimons l'éventuel dernier slash de l'URL\n      var urlcourante = document.location.href;\n      urlcourante = urlcourante.replace(/\\/$/, \"\"); // Gardons dans la variable queue_url uniquement la portion derrière le dernier slash de urlcourante\n\n      const queue_url = urlcourante.substring(urlcourante.lastIndexOf(\"/\") + 1);\n      console.log(' Queue URL : \\n' + queue_url); // 2 Suppression de la photo dans le serveur \n\n      axios.get(`http://localhost:8000/deletePhotoMessage/${queue_url}`);\n      axios.post(`http://localhost:8000/deleteMessageBDD/${queue_url}`);\n    };\n\n    this.confirmerModification = () => {\n      // Si la modification est sans Photo \n      if (this.state.fileSelected === \"\") {\n        // préparation de notre envoi au serveur Node\n        const messageModifie = {\n          message: this.props.values.message,\n          auteur: this.props.values.auteur,\n          photo: this.props.values.photo\n        };\n        let ID = this.props.match.params.id;\n        console.log(ID); // Envoi de notre modification à Node\n\n        axios.post(`http://localhost:8000/modifyMessage/${ID}`, messageModifie).then(function (reponse) {\n          console.log('modification envoyée au serveur');\n        }).then(error => {\n          console.log(\"front : il y a eu cette erreure\", error);\n        }); // Remettre à jour la liste des Messages sur la BDD\n\n        axios.get(\"http://localhost:8000/\").then(reponse => {\n          const messagess = reponse.data.data.map(message => {\n            return {\n              id: message.id,\n              auteur: message.auteur,\n              photo: message.photo,\n              message: message.message,\n              createdAt: message.createdAt,\n              updatedAt: message.updatedAt,\n              created: message.created\n            };\n          });\n          this.setState({\n            messagess\n          });\n        });\n        this.setState({});\n      } else {\n        // Si la modification est l'ajout ou la modification d'une photo (en mopdifiant également le texte si nécéssaire)\n        const id = this.props.values.id;\n        /* Suppression de l'ancienne photo dans le server */\n\n        const path2 = \"http://localhost:8000/deletePhotoMessage/\";\n        axios.get(path2 + id).then(reponse => {\n          console.log(reponse);\n        });\n        /* Téléchargement de na nouvelle photo */\n\n        const ImageName = Date.now() + this.state.fileSelectedName.name.split(\" \").join(\"_\");\n        const fd = new FormData();\n        fd.append('image', this.state.fileSelectedName, ImageName);\n        const path = \"http://localhost:8000/updatePhotoMessage/\";\n        axios.post(path + id, fd).then(res => {\n          console.log(res);\n        });\n        const messageModifie = {\n          message: this.props.values.message,\n          auteur: this.props.values.auteur\n          /*             photo : this.props.values.photo,\n           */\n\n        };\n        let ID = this.props.match.params.id;\n        console.log(ID); // Envoi de notre modification à Node\n\n        axios.post(`http://localhost:8000/modifyMessage/${ID}`, messageModifie).then(reponse => {\n          console.log('modification envoyée au serveur');\n        }).catch(error => {\n          console.log(\"front : il y a eu cette erreure\", error);\n        }); // Remettre à jour la liste des Messages sur la BDD\n\n        axios.get(\"http://localhost:8000/\").then(reponse => {\n          console.log(reponse);\n        });\n      }\n    };\n  }\n\n  render() {\n    const classBloc = `${classes.modifyMessage} container w-100 `;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Entete, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classBloc,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"exampleTextarea\",\n            className: \"form-label mt-4\",\n            children: \"Ecrivez votre message et cliquez sur postez pour qu'il se rajoute aux posts du forum\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col-8\",\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"message\",\n              className: \"form-control\",\n              id: \"exampleTextarea\",\n              rows: \"3\",\n              onChange: this.props.handleChange,\n              value: this.props.values.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col-4\",\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: \"/accueil/\",\n              children: /*#__PURE__*/_jsxDEV(Bouton, {\n                className: \"\",\n                couleur: \"primary\",\n                type: \"button\",\n                clic: () => this.confirmerModification(),\n                children: \"MODIFIER\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/accueil/\",\n              children: /*#__PURE__*/_jsxDEV(Bouton, {\n                className: \"color-white\",\n                couleur: \"secondary\",\n                type: \"button\",\n                children: \"RETOUR\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"exampleTextarea\",\n              className: \"form-label mt-4\",\n              children: \"Modifiez ou ajouter la photo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"file\",\n              onChange: event => this.fileSelected(event)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 29\n            }, this), this.state.photo && /*#__PURE__*/_jsxDEV(\"img\", {\n              alt: \"photoMessage\",\n              src: `http://localhost:8000/images/${this.state.photo}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 54\n            }, this), this.state.photo && /*#__PURE__*/_jsxDEV(\"i\", {\n              onClick: this.handleDeletePhoto,\n              className: \"fas fa-times align-top\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 54\n            }, this), this.state.fileSelected && this.state.photo && /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fas fa-3x fa-long-arrow-alt-right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 81\n            }, this), this.state.fileSelected && /*#__PURE__*/_jsxDEV(\"img\", {\n              alt: \"photoMessage\",\n              src: this.state.fileSelected\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 61\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default withFormik({\n  mapPropsToValues: () => ({\n    id: \"\",\n    auteur: \"\",\n    photo: \"\",\n    message: \"\",\n    createdAt: \"\",\n    updatedAt: \"\",\n    created: \"\"\n  }),\n  validate: values => {// Contient les règles de validations\n  },\n  handleSubmit: (values, {\n    props\n  }) => {\n    this.confirmerModification();\n  }\n})(ModifyMessage);","map":{"version":3,"sources":["/Users/kevincarpentier/Library/Mobile Documents/com~apple~CloudDocs/Sites /PRojet 7 v2/frontend/src/container/modifyMessage/modifyMessage.js"],"names":["React","Bouton","classes","Entete","axios","Link","withFormik","ModifyMessage","Component","state","message","fileSelected","fileSelectedName","event","setState","URL","createObjectURL","target","files","File","componentDidMount","ID","props","match","params","id","get","then","reponse","values","auteur","data","photo","createdAt","updatedAt","stateUpdated","catch","error","console","log","handleDeletePhoto","urlcourante","document","location","href","replace","queue_url","substring","lastIndexOf","post","confirmerModification","messageModifie","messagess","map","created","path2","ImageName","Date","now","name","split","join","fd","FormData","append","path","res","render","classBloc","modifyMessage","handleChange","mapPropsToValues","validate","handleSubmit"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAoB,kBAApB;AACA,SAAQC,UAAR,QAAyB,QAAzB;;;;AAKA,MAAMC,aAAN,SAA4BP,KAAK,CAACQ,SAAlC,CAA4C;AAAA;AAAA;AAAA,SACxCC,KADwC,GAChC;AACJC,MAAAA,OAAO,EAAG,EADN;AAEJC,MAAAA,YAAY,EAAG,EAFX;AAGJC,MAAAA,gBAAgB,EAAG;AAHf,KADgC;;AAAA,SAQxCD,YARwC,GAQxBE,KAAD,IAAW;AACtB;AACD,WAAKC,QAAL,CAAc;AAACH,QAAAA,YAAY,EAAGI,GAAG,CAACC,eAAJ,CAAoBH,KAAK,CAACI,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAApB;AAAhB,OAAd,EAFuB,CAIvB;;AACA,YAAMC,IAAI,GAAIN,KAAK,CAACI,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAd;AACA,WAAKJ,QAAL,CAAc;AAACF,QAAAA,gBAAgB,EAAGO;AAApB,OAAd;AACF,KAfuC;;AAAA,SAmBxCC,iBAnBwC,GAmBpB,MAAM;AACtB,UAAIC,EAAE,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAAjC,CADsB,CAEtB;;AACArB,MAAAA,KAAK,CAACsB,GAAN,CAAW,8BAA6BL,EAAG,EAA3C,EACCM,IADD,CACMC,OAAO,IAAI;AACb;AACA,aAAKN,KAAL,CAAWO,MAAX,CAAkBJ,EAAlB,GAAuBJ,EAAvB;AACA,aAAKC,KAAL,CAAWO,MAAX,CAAkBC,MAAlB,GAA2BF,OAAO,CAACG,IAAR,CAAaA,IAAb,CAAkBD,MAA7C;AACA,aAAKR,KAAL,CAAWO,MAAX,CAAkBG,KAAlB,GAA0BJ,OAAO,CAACG,IAAR,CAAaA,IAAb,CAAkBC,KAA5C;AACA,aAAKV,KAAL,CAAWO,MAAX,CAAkBnB,OAAlB,GAA4BkB,OAAO,CAACG,IAAR,CAAaA,IAAb,CAAkBrB,OAA9C;AACA,aAAKY,KAAL,CAAWO,MAAX,CAAkBI,SAAlB,GAA8BL,OAAO,CAACG,IAAR,CAAaA,IAAb,CAAkBE,SAAhD;AACA,aAAKX,KAAL,CAAWO,MAAX,CAAkBK,SAAlB,GAA8BN,OAAO,CAACG,IAAR,CAAaA,IAAb,CAAkBG,SAAhD,CAPa,CAQb;;AACA,cAAMC,YAAY,GAAG;AACjBV,UAAAA,EAAE,EAAG,KAAKH,KAAL,CAAWO,MAAX,CAAkBJ,EADN;AAEjBK,UAAAA,MAAM,EAAG,KAAKR,KAAL,CAAWO,MAAX,CAAkBC,MAFV;AAGjBE,UAAAA,KAAK,EAAG,KAAKV,KAAL,CAAWO,MAAX,CAAkBG,KAHT;AAIjBtB,UAAAA,OAAO,EAAG,KAAKY,KAAL,CAAWO,MAAX,CAAkBnB,OAJX;AAKjBwB,UAAAA,SAAS,EAAG,KAAKZ,KAAL,CAAWO,MAAX,CAAkBK;AALb,SAArB;AAOA,aAAKpB,QAAL,CAAcqB,YAAd;AACH,OAlBD,EAmBCC,KAnBD,CAmBOC,KAAK,IAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,OArBD;AAsBH,KA5CuC;;AAAA,SA8C5CG,iBA9C4C,GA8CxB,MAAM;AACtB;AACJ;AACA,UAAIC,WAAW,GAAGC,QAAQ,CAACC,QAAT,CAAkBC,IAApC;AACAH,MAAAA,WAAW,GAAGA,WAAW,CAACI,OAAZ,CAAoB,KAApB,EAA2B,EAA3B,CAAd,CAJ0B,CAK1B;;AACA,YAAMC,SAAS,GAAGL,WAAW,CAACM,SAAZ,CAAsBN,WAAW,CAACO,WAAZ,CAAyB,GAAzB,IAA+B,CAArD,CAAlB;AACAV,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAkBO,SAA9B,EAP0B,CAQtB;;AACA1C,MAAAA,KAAK,CAACsB,GAAN,CAAW,4CAA2CoB,SAAU,EAAhE;AACA1C,MAAAA,KAAK,CAAC6C,IAAN,CAAY,0CAAyCH,SAAU,EAA/D;AACH,KAzD2C;;AAAA,SA4DxCI,qBA5DwC,GA4DhB,MAAM;AAC1B;AACA,UAAG,KAAKzC,KAAL,CAAWE,YAAX,KAA4B,EAA/B,EAAmC;AAC/B;AACA,cAAMwC,cAAc,GAAG;AACnBzC,UAAAA,OAAO,EAAG,KAAKY,KAAL,CAAWO,MAAX,CAAkBnB,OADT;AAEnBoB,UAAAA,MAAM,EAAG,KAAKR,KAAL,CAAWO,MAAX,CAAkBC,MAFR;AAGnBE,UAAAA,KAAK,EAAG,KAAKV,KAAL,CAAWO,MAAX,CAAkBG;AAHP,SAAvB;AAKA,YAAIX,EAAE,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAAjC;AACAa,QAAAA,OAAO,CAACC,GAAR,CAAYlB,EAAZ,EAR+B,CAS/B;;AACAjB,QAAAA,KAAK,CAAC6C,IAAN,CAAY,uCAAsC5B,EAAG,EAArD,EACI8B,cADJ,EAGCxB,IAHD,CAGM,UAASC,OAAT,EAAkB;AACpBU,UAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACH,SALD,EAMCZ,IAND,CAMMU,KAAK,IAAI;AACXC,UAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CF,KAA/C;AACH,SARD,EAV+B,CAmB/B;;AACAjC,QAAAA,KAAK,CAACsB,GAAN,CAAU,wBAAV,EACCC,IADD,CACMC,OAAO,IAAI;AACb,gBAAMwB,SAAS,GAAGxB,OAAO,CAACG,IAAR,CAAaA,IAAb,CAAkBsB,GAAlB,CAAsB3C,OAAO,IAAI;AAC/C,mBAAM;AACFe,cAAAA,EAAE,EAAEf,OAAO,CAACe,EADV;AAEFK,cAAAA,MAAM,EAAEpB,OAAO,CAACoB,MAFd;AAGFE,cAAAA,KAAK,EAAEtB,OAAO,CAACsB,KAHb;AAIFtB,cAAAA,OAAO,EAAEA,OAAO,CAACA,OAJf;AAKFuB,cAAAA,SAAS,EAAEvB,OAAO,CAACuB,SALjB;AAMFC,cAAAA,SAAS,EAAExB,OAAO,CAACwB,SANjB;AAOFoB,cAAAA,OAAO,EAAG5C,OAAO,CAAC4C;AAPhB,aAAN;AASP,WAVqB,CAAlB;AAWJ,eAAKxC,QAAL,CAAc;AAACsC,YAAAA;AAAD,WAAd;AACC,SAdD;AAeA,aAAKtC,QAAL,CAAc,EAAd;AACH,OApCD,MAoCO;AACH;AACA,cAAMW,EAAE,GAAG,KAAKH,KAAL,CAAWO,MAAX,CAAkBJ,EAA7B;AACA;;AACA,cAAM8B,KAAK,GAAG,2CAAd;AACAnD,QAAAA,KAAK,CAACsB,GAAN,CAAU6B,KAAK,GAAC9B,EAAhB,EACCE,IADD,CACMC,OAAO,IAAI;AACbU,UAAAA,OAAO,CAACC,GAAR,CAAYX,OAAZ;AACH,SAHD;AAKA;;AACJ,cAAM4B,SAAS,GAAGC,IAAI,CAACC,GAAL,KAAa,KAAKjD,KAAL,CAAWG,gBAAX,CAA4B+C,IAA5B,CAAiCC,KAAjC,CAAuC,GAAvC,EAA4CC,IAA5C,CAAiD,GAAjD,CAA/B;AACA,cAAMC,EAAE,GAAG,IAAIC,QAAJ,EAAX;AACAD,QAAAA,EAAE,CAACE,MAAH,CAAU,OAAV,EAAmB,KAAKvD,KAAL,CAAWG,gBAA9B,EAAgD4C,SAAhD;AACA,cAAMS,IAAI,GAAG,2CAAb;AACA7D,QAAAA,KAAK,CAAC6C,IAAN,CAAWgB,IAAI,GAACxC,EAAhB,EAAoBqC,EAApB,EACCnC,IADD,CACMuC,GAAG,IAAI;AACT5B,UAAAA,OAAO,CAACC,GAAR,CAAY2B,GAAZ;AACH,SAHD;AAKA,cAAMf,cAAc,GAAG;AACnBzC,UAAAA,OAAO,EAAG,KAAKY,KAAL,CAAWO,MAAX,CAAkBnB,OADT;AAEnBoB,UAAAA,MAAM,EAAG,KAAKR,KAAL,CAAWO,MAAX,CAAkBC;AACvC;AACA;;AAJ+B,SAAvB;AAKA,YAAIT,EAAE,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAAjC;AACAa,QAAAA,OAAO,CAACC,GAAR,CAAYlB,EAAZ,EA1BO,CA2BP;;AACAjB,QAAAA,KAAK,CAAC6C,IAAN,CAAY,uCAAsC5B,EAAG,EAArD,EACI8B,cADJ,EAGCxB,IAHD,CAGOC,OAAD,IAAa;AACfU,UAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACH,SALD,EAMCH,KAND,CAMOC,KAAK,IAAI;AACZC,UAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CF,KAA/C;AACH,SARD,EA5BO,CAqCP;;AACAjC,QAAAA,KAAK,CAACsB,GAAN,CAAU,wBAAV,EACCC,IADD,CACMC,OAAO,IAAI;AACbU,UAAAA,OAAO,CAACC,GAAR,CAAYX,OAAZ;AACH,SAHD;AAIC;AAIJ,KAhJuC;AAAA;;AAkJxCuC,EAAAA,MAAM,GAAE;AACJ,UAAMC,SAAS,GAAI,GAAElE,OAAO,CAACmE,aAAc,mBAA3C;AAEA,wBACQ;AAAA,8BACA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAM,QAAA,SAAS,EAAED,SAAjB;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,kCACA;AAAO,YAAA,OAAO,EAAC,iBAAf;AAAiC,YAAA,SAAS,EAAC,iBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEI;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA,mCACI;AACA,cAAA,IAAI,EAAC,SADL;AAEA,cAAA,SAAS,EAAC,cAFV;AAGA,cAAA,EAAE,EAAC,iBAHH;AAGqB,cAAA,IAAI,EAAC,GAH1B;AAIA,cAAA,QAAQ,EAAE,KAAK9C,KAAL,CAAWgD,YAJrB;AAKA,cAAA,KAAK,EAAE,KAAKhD,KAAL,CAAWO,MAAX,CAAkBnB;AALzB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAWI;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA,oCAEI,QAAC,IAAD;AAAO,cAAA,EAAE,EAAC,WAAV;AAAA,qCACI,QAAC,MAAD;AAAQ,gBAAA,SAAS,EAAC,EAAlB;AAAqB,gBAAA,OAAO,EAAC,SAA7B;AAAuC,gBAAA,IAAI,EAAC,QAA5C;AAAqD,gBAAA,IAAI,EAAE,MAAM,KAAKwC,qBAAL,EAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAQI,QAAC,IAAD;AAAM,cAAA,EAAE,EAAC,WAAT;AAAA,qCACI,QAAC,MAAD;AAAQ,gBAAA,SAAS,EAAC,aAAlB;AAAgC,gBAAA,OAAO,EAAC,WAAxC;AAAoD,gBAAA,IAAI,EAAC,QAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXJ,eAyBI;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,oCACI;AAAO,cAAA,OAAO,EAAC,iBAAf;AAAiC,cAAA,SAAS,EAAC,iBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAO,cAAA,SAAS,EAAC,cAAjB;AAAgC,cAAA,IAAI,EAAC,MAArC;AAA6C,cAAA,QAAQ,EAAErC,KAAK,IAAI,KAAKF,YAAL,CAAkBE,KAAlB;AAAhE;AAAA;AAAA;AAAA;AAAA,oBAFJ,EAGS,KAAKJ,KAAL,CAAWuB,KAAX,iBAAoB;AAAK,cAAA,GAAG,EAAC,cAAT;AAAwB,cAAA,GAAG,EAAG,gCAA+B,KAAKvB,KAAL,CAAWuB,KAAM;AAA9E;AAAA;AAAA;AAAA;AAAA,oBAH7B,EAIS,KAAKvB,KAAL,CAAWuB,KAAX,iBAAoB;AAAG,cAAA,OAAO,EAAE,KAAKQ,iBAAjB;AAAoC,cAAA,SAAS,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA,oBAJ7B,EAKS,KAAK/B,KAAL,CAAWE,YAAX,IAA2B,KAAKF,KAAL,CAAWuB,KAAtC,iBAA+C;AAAG,cAAA,KAAK,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,oBALxD,EAMS,KAAKvB,KAAL,CAAWE,YAAX,iBAA2B;AAAK,cAAA,GAAG,EAAC,cAAT;AAAwB,cAAA,GAAG,EAAE,KAAKF,KAAL,CAAWE;AAAxC;AAAA;AAAA;AAAA;AAAA,oBANpC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA,oBADR;AAyCH;;AA9LuC;;AAgM5C,eAAeL,UAAU,CAAC;AAEtBiE,EAAAA,gBAAgB,EAAG,OAAO;AAClB9C,IAAAA,EAAE,EAAE,EADc;AAElBK,IAAAA,MAAM,EAAE,EAFU;AAGlBE,IAAAA,KAAK,EAAE,EAHW;AAIlBtB,IAAAA,OAAO,EAAE,EAJS;AAKlBuB,IAAAA,SAAS,EAAE,EALO;AAMlBC,IAAAA,SAAS,EAAE,EANO;AAOlBoB,IAAAA,OAAO,EAAG;AAPQ,GAAP,CAFG;AAWtBkB,EAAAA,QAAQ,EAAG3C,MAAM,IAAI,CACjB;AACH,GAbqB;AActB4C,EAAAA,YAAY,EAAC,CAAC5C,MAAD,EAAS;AAACP,IAAAA;AAAD,GAAT,KAAqB;AAC9B,SAAK4B,qBAAL;AACH;AAhBqB,CAAD,CAAV,CAkBR3C,aAlBQ,CAAf","sourcesContent":["import React from \"react\";\nimport Bouton from \"../../components/bouton/bouton\";\nimport classes from \"./modifyMessage.module.css\"\nimport Entete from \"../../components/entete/entete\";\nimport axios from \"axios\"\nimport { Link} from \"react-router-dom\"\nimport {withFormik} from \"formik\"\n\n\n\n\nclass ModifyMessage extends React.Component {\n    state = {\n        message : \"\",\n        fileSelected : \"\",\n        fileSelectedName : \"\"\n    }\n\n    // Alimentation du state avec la photo que l'on choisi\n    fileSelected = (event) => {\n        // mettre l'image dans le state pour l'affichage de l'aperçu\n       this.setState({fileSelected : URL.createObjectURL(event.target.files[0])})\n\n       // mettre le nom de l'image dans le state pour le renvoyer au composant supérieur \n       const File = (event.target.files[0])\n       this.setState({fileSelectedName : File})\n    }\n    \n\n/* Récupérer les éléments du message à modifier en fonction de son id */\n    componentDidMount = () => {\n        let ID = this.props.match.params.id\n        // Appeler tous les messages dans la BDD \n        axios.get(`http://localhost:8000/byID/${ID}`)\n        .then(reponse => {\n            // J'ajoute toutes les données, l'ID récupéré du paramètre d'URL, le reste du serveur\n            this.props.values.id = ID\n            this.props.values.auteur = reponse.data.data.auteur\n            this.props.values.photo = reponse.data.data.photo\n            this.props.values.message = reponse.data.data.message\n            this.props.values.createdAt = reponse.data.data.createdAt\n            this.props.values.updatedAt = reponse.data.data.updatedAt\n            // Je mets à jour mes states avec les données que j'ai récupérées du serveur\n            const stateUpdated = {\n                id : this.props.values.id,\n                auteur : this.props.values.auteur,\n                photo : this.props.values.photo,\n                message : this.props.values.message,\n                updatedAt : this.props.values.updatedAt\n            } \n            this.setState(stateUpdated)\n        })\n        .catch(error => {\n            console.log(error)\n        })\n    }\n\nhandleDeletePhoto = () => {\n    // 1 Récupération de l'id placé en fin d'URL\n// Supprimons l'éventuel dernier slash de l'URL\nvar urlcourante = document.location.href; \nurlcourante = urlcourante.replace(/\\/$/, \"\");\n// Gardons dans la variable queue_url uniquement la portion derrière le dernier slash de urlcourante\nconst queue_url = urlcourante.substring(urlcourante.lastIndexOf( \"/\" )+1 );\nconsole.log(' Queue URL : \\n'+queue_url);\n    // 2 Suppression de la photo dans le serveur \n    axios.get(`http://localhost:8000/deletePhotoMessage/${queue_url}`)\n    axios.post(`http://localhost:8000/deleteMessageBDD/${queue_url}`)\n}\n\n\n    confirmerModification = () => {\n        // Si la modification est sans Photo \n        if(this.state.fileSelected === \"\") {\n            // préparation de notre envoi au serveur Node\n            const messageModifie = {\n                message : this.props.values.message,\n                auteur : this.props.values.auteur,\n                photo : this.props.values.photo,\n            }\n            let ID = this.props.match.params.id\n            console.log(ID)\n            // Envoi de notre modification à Node\n            axios.post(`http://localhost:8000/modifyMessage/${ID}`,\n                messageModifie\n            )\n            .then(function(reponse) {\n                console.log('modification envoyée au serveur')\n            })    \n            .then(error => {\n                console.log(\"front : il y a eu cette erreure\", error)\n            })\n            // Remettre à jour la liste des Messages sur la BDD\n            axios.get(\"http://localhost:8000/\")\n            .then(reponse => {\n                const messagess = reponse.data.data.map(message => {\n                    return{\n                        id: message.id,\n                        auteur: message.auteur,\n                        photo: message.photo,\n                        message: message.message,\n                        createdAt: message.createdAt,\n                        updatedAt: message.updatedAt,\n                        created : message.created\n                    }\n            })\n            this.setState({messagess})\n            })\n            this.setState({})\n        } else {\n            // Si la modification est l'ajout ou la modification d'une photo (en mopdifiant également le texte si nécéssaire)\n            const id = this.props.values.id\n            /* Suppression de l'ancienne photo dans le server */\n            const path2 = \"http://localhost:8000/deletePhotoMessage/\"\n            axios.get(path2+id)\n            .then(reponse => {\n                console.log(reponse)\n            })\n\n            /* Téléchargement de na nouvelle photo */\n        const ImageName = Date.now() + this.state.fileSelectedName.name.split(\" \").join(\"_\")\n        const fd = new FormData()\n        fd.append('image', this.state.fileSelectedName, ImageName)\n        const path = \"http://localhost:8000/updatePhotoMessage/\"\n        axios.post(path+id, fd)\n        .then(res => {\n            console.log(res)   \n        })   \n\n        const messageModifie = {\n            message : this.props.values.message,\n            auteur : this.props.values.auteur,\n/*             photo : this.props.values.photo,\n */        }\n        let ID = this.props.match.params.id\n        console.log(ID)\n        // Envoi de notre modification à Node\n        axios.post(`http://localhost:8000/modifyMessage/${ID}`,\n            messageModifie\n        )\n        .then((reponse) => {\n            console.log('modification envoyée au serveur')\n        })    \n        .catch(error => {\n            console.log(\"front : il y a eu cette erreure\", error)\n        })\n        // Remettre à jour la liste des Messages sur la BDD\n        axios.get(\"http://localhost:8000/\")\n        .then(reponse => {\n            console.log(reponse)\n        })\n        }\n\n\n\n    }    \n\n    render(){\n        const classBloc = `${classes.modifyMessage} container w-100 `\n\n        return (\n                <>\n                <Entete/>\n                <form className={classBloc}>\n                    <div className='row'>\n                    <label htmlFor=\"exampleTextarea\" className=\"form-label mt-4\">Ecrivez votre message et cliquez sur postez pour qu'il se rajoute aux posts du forum</label>\n                        <div className=\"form-group col-8\">\n                            <textarea \n                            name='message'\n                            className=\"form-control\" \n                            id=\"exampleTextarea\" rows=\"3\" \n                            onChange={this.props.handleChange}\n                            value={this.props.values.message}\n                            />\n                        </div>\n                        <div className=\"form-group col-4\">\n\n                            <Link  to=\"/accueil/\"> \n                                <Bouton className=\"\" couleur=\"primary\" type=\"button\" clic={() => this.confirmerModification()}> \n                                    MODIFIER \n                                </Bouton>\n                            </Link>\n\n                            <Link to=\"/accueil/\">  \n                                <Bouton className=\"color-white\" couleur=\"secondary\" type=\"button\"  > \n                                    RETOUR\n                                </Bouton>\n                            </Link>\n                        </div>\n                        <div className=\"container\">\n                            <label htmlFor=\"exampleTextarea\" className=\"form-label mt-4\">Modifiez ou ajouter la photo</label>\n                            <input className=\"form-control\" type=\"file\"  onChange={event => this.fileSelected(event)}/>\n                                {this.state.photo && <img alt='photoMessage' src={`http://localhost:8000/images/${this.state.photo}` } /> }\n                                {this.state.photo && <i onClick={this.handleDeletePhoto} className=\"fas fa-times align-top\"></i>}\n                                {this.state.fileSelected && this.state.photo && <i class=\"fas fa-3x fa-long-arrow-alt-right\"></i>}\n                                {this.state.fileSelected && <img alt='photoMessage' src={this.state.fileSelected } /> }\n                            </div>\n                    </div>\n                </form>\n            </> \n        )\n    }\n}\nexport default withFormik({\n\n    mapPropsToValues : () => ({\n            id: \"\",\n            auteur: \"\",\n            photo: \"\",\n            message: \"\",\n            createdAt: \"\",\n            updatedAt: \"\",\n            created : \"\"\n       }),\n    validate : values => {\n        // Contient les règles de validations\n    },\n    handleSubmit:(values, {props}) => {\n        this.confirmerModification()\n    }\n    \n    })(ModifyMessage)\n"]},"metadata":{},"sourceType":"module"}