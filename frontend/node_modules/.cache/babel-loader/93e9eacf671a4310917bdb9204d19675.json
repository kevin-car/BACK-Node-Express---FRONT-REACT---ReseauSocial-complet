{"ast":null,"code":"var _jsxFileName = \"/Users/kevincarpentier/Library/Mobile Documents/com~apple~CloudDocs/Sites /PRojet 7 v2/frontend/src/container/pageMessages.js\";\nimport React from \"react\";\nimport Entete from \"./entete/entete\";\nimport PostMessages from \"./postMessage/postMessage\";\nimport ViewOldMessages from \"./viewOldMessages/viewOldMessages\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass PageMessage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ilLoaded: false,\n      messagess: []\n    };\n\n    this.componentDidMount = () => {\n      axios.get(\"http://localhost:8000/\").then(reponse => {\n        const messagess = reponse.data.data.map(message => {\n          return {\n            id: message.id,\n            auteur: message.auteur,\n            photo: message.photo,\n            message: message.message,\n            createdAt: message.createdAt,\n            updatedAt: message.updatedAt,\n            created: message.created\n          };\n        });\n        this.setState({\n          messagess\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.HandleDeleteMessage = id => {\n      const messageIndex = this.state.messagess.findIndex(l => {\n        return l.id === id;\n      }); // Supprime dans les states\n\n      const newmessagess = [...this.state.messagess];\n      newmessagess.splice(messageIndex, 1);\n      this.setState({\n        messagess: newmessagess\n      });\n      console.log(newmessagess); //Supprime dans la base de donnée\n\n      const pathWithID = `http://localhost:8000/delete`;\n      console.log(pathWithID, \"l'id supprimé :\", id);\n      axios.delete(pathWithID, {\n        data: {\n          id: id\n        },\n        headers: {\n          \"Authorization\": \"clé d'autorisation\"\n        }\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Entete, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PostMessages, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ViewOldMessages, {\n        deletemessage: () => this.HandleDeleteMessage(message.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default PageMessage;","map":{"version":3,"sources":["/Users/kevincarpentier/Library/Mobile Documents/com~apple~CloudDocs/Sites /PRojet 7 v2/frontend/src/container/pageMessages.js"],"names":["React","Entete","PostMessages","ViewOldMessages","PageMessage","Component","state","ilLoaded","messagess","componentDidMount","axios","get","then","reponse","data","map","message","id","auteur","photo","createdAt","updatedAt","created","setState","catch","error","console","log","HandleDeleteMessage","messageIndex","findIndex","l","newmessagess","splice","pathWithID","delete","headers","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;;;;AAEA,MAAMC,WAAN,SAA0BJ,KAAK,CAACK,SAAhC,CAA0C;AAAA;AAAA;AAAA,SAEtCC,KAFsC,GAE9B;AACJC,MAAAA,QAAQ,EAAG,KADP;AAEJC,MAAAA,SAAS,EAAG;AAFR,KAF8B;;AAAA,SAQtCC,iBARsC,GAQlB,MAAM;AACtBC,MAAAA,KAAK,CAACC,GAAN,CAAU,wBAAV,EACCC,IADD,CACMC,OAAO,IAAI;AACb,cAAML,SAAS,GAAGK,OAAO,CAACC,IAAR,CAAaA,IAAb,CAAkBC,GAAlB,CAAsBC,OAAO,IAAI;AAC/C,iBAAM;AACFC,YAAAA,EAAE,EAAED,OAAO,CAACC,EADV;AAEFC,YAAAA,MAAM,EAAEF,OAAO,CAACE,MAFd;AAGFC,YAAAA,KAAK,EAAEH,OAAO,CAACG,KAHb;AAIFH,YAAAA,OAAO,EAAEA,OAAO,CAACA,OAJf;AAKFI,YAAAA,SAAS,EAAEJ,OAAO,CAACI,SALjB;AAMFC,YAAAA,SAAS,EAAEL,OAAO,CAACK,SANjB;AAOFC,YAAAA,OAAO,EAAGN,OAAO,CAACM;AAPhB,WAAN;AASP,SAVqB,CAAlB;AAWJ,aAAKC,QAAL,CAAc;AAACf,UAAAA;AAAD,SAAd;AAEH,OAfG,EAgBCgB,KAhBD,CAgBOC,KAAK,IAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,OAlBD;AAmBH,KA5BqC;;AAAA,SA8BtCG,mBA9BsC,GA8BfX,EAAD,IAAQ;AAC1B,YAAMY,YAAY,GAAG,KAAKvB,KAAL,CAAWE,SAAX,CAAqBsB,SAArB,CAA+BC,CAAC,IAAI;AACrD,eAAOA,CAAC,CAACd,EAAF,KAASA,EAAhB;AACH,OAFoB,CAArB,CAD0B,CAK1B;;AACA,YAAMe,YAAY,GAAG,CAAC,GAAG,KAAK1B,KAAL,CAAWE,SAAf,CAArB;AACAwB,MAAAA,YAAY,CAACC,MAAb,CAAoBJ,YAApB,EAAkC,CAAlC;AAEA,WAAKN,QAAL,CAAc;AAACf,QAAAA,SAAS,EAAGwB;AAAb,OAAd;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYK,YAAZ,EAV0B,CAW1B;;AACA,YAAME,UAAU,GAAI,8BAApB;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAYO,UAAZ,EAAwB,iBAAxB,EAA2CjB,EAA3C;AAEAP,MAAAA,KAAK,CAACyB,MAAN,CAAaD,UAAb,EAAyB;AACpBpB,QAAAA,IAAI,EAAE;AAAEG,UAAAA,EAAE,EAAEA;AAAN,SADc;AAEpBmB,QAAAA,OAAO,EAAE;AAAE,2BAAiB;AAAnB;AAFW,OAAzB;AAIH,KAjDqC;AAAA;;AAoDtCC,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA,8BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,eAAD;AACI,QAAA,aAAa,EAAI,MAAM,KAAKT,mBAAL,CAAyBZ,OAAO,CAACC,EAAjC;AAD3B;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA,oBADJ;AASH;;AA9DqC;;AAiE1C,eAAeb,WAAf","sourcesContent":["import React from \"react\";\nimport Entete from \"./entete/entete\";\nimport PostMessages from \"./postMessage/postMessage\";\nimport ViewOldMessages from \"./viewOldMessages/viewOldMessages\";\n\nclass PageMessage extends React.Component {\n\n    state = {\n        ilLoaded : false,\n        messagess : []\n\n    }\n\n    componentDidMount = () => {\n        axios.get(\"http://localhost:8000/\")\n        .then(reponse => {\n            const messagess = reponse.data.data.map(message => {\n                return{\n                    id: message.id,\n                    auteur: message.auteur,\n                    photo: message.photo,\n                    message: message.message,\n                    createdAt: message.createdAt,\n                    updatedAt: message.updatedAt,\n                    created : message.created\n                }\n        })\n        this.setState({messagess})\n\n    })    \n        .catch(error => {\n            console.log(error)\n        })\n    }\n\n    HandleDeleteMessage = (id) => {\n        const messageIndex = this.state.messagess.findIndex(l => {\n            return l.id === id\n        })\n\n        // Supprime dans les states\n        const newmessagess = [...this.state.messagess]\n        newmessagess.splice(messageIndex, 1)\n\n        this.setState({messagess : newmessagess})\n        console.log(newmessagess)\n        //Supprime dans la base de donnée\n        const pathWithID = `http://localhost:8000/delete`\n        console.log(pathWithID, \"l'id supprimé :\", id)\n\n        axios.delete(pathWithID, {\n             data: { id: id },\n             headers: { \"Authorization\": \"clé d'autorisation\" }\n        });\n    }\n\n\n    render(){\n        return(\n            <>\n                <Entete />\n                <PostMessages />\n                <ViewOldMessages \n                    deletemessage = {() => this.HandleDeleteMessage(message.id)}\n                /> \n            </>\n            )\n    }\n}\n\nexport default PageMessage"]},"metadata":{},"sourceType":"module"}