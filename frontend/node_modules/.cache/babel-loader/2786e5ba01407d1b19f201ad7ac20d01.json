{"ast":null,"code":"var _jsxFileName = \"/Users/kevincarpentier/Library/Mobile Documents/com~apple~CloudDocs/Sites /PRojet 7 v2/frontend/src/container/postMessage/postMessage.js\";\nimport React from \"react\";\nimport classes from \"./postMessage.module.css\";\nimport Input from \"../../components/bouton/input\";\nimport Bouton from \"../../components/bouton/bouton\";\nimport { withFormik } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PostMessages extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      fileSelected: \"\",\n      fileSelectedName: \"\"\n    };\n\n    this.fileSelected = event => {\n      // mettre l'image dans le state pour l'affichage de l'aperçu\n      this.setState({\n        fileSelected: URL.createObjectURL(event.target.files[0])\n      }); // mettre le nom de l'image dans le state pour le renvoyer au composant supérieur \n\n      const File = event.target.files[0];\n      this.setState({\n        fileSelectedName: File\n      });\n    };\n  }\n\n  render() {\n    const classBloc = `${classes.blocFormulaire} container w-100 `;\n    const imageUploaded = this.state.fileSelectedName;\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classBloc,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"exampleTextarea\",\n          className: \"form-label mt-4\",\n          children: \"Ecrivez votre message et cliquez sur postez pour qu'il se rajoute aux posts du forum\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group col-8\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"form-control\",\n            id: \"exampleTextarea\",\n            rows: \"3\",\n            value: this.props.values.textArea,\n            onChange: this.props.handleChange,\n            name: \"textArea\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group col-4\",\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            type: \"file\",\n            onChange: event => this.fileSelected(event),\n            children: \" Parcourir\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Bouton, {\n            couleur: \"primary\",\n            type: \"button\",\n            clic: this.props.handleSubmit,\n            children: \" Envoyer \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: classes.imagePres,\n            src: this.state.fileSelected\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default withFormik({\n  mapPropsToValues: () => ({\n    textArea: \"\"\n  }),\n  validate: values => {// Contient les règles de validations\n  },\n  handleSubmit: (values, {\n    props\n  }) => {\n    props.envoi(imageUploaded);\n  }\n})(PostMessages);","map":{"version":3,"sources":["/Users/kevincarpentier/Library/Mobile Documents/com~apple~CloudDocs/Sites /PRojet 7 v2/frontend/src/container/postMessage/postMessage.js"],"names":["React","classes","Input","Bouton","withFormik","PostMessages","Component","state","fileSelected","fileSelectedName","event","setState","URL","createObjectURL","target","files","File","render","classBloc","blocFormulaire","imageUploaded","props","values","textArea","handleChange","handleSubmit","imagePres","mapPropsToValues","validate","envoi"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classes from \"./postMessage.module.css\"\nimport Input from \"../../components/bouton/input\";\nimport Bouton from \"../../components/bouton/bouton\";\nimport {withFormik} from \"formik\"\n\nclass PostMessages extends React.Component {\n\n    state = {\n        fileSelected : \"\",\n        fileSelectedName : \"\"\n    }  \n  \n    fileSelected = (event) => {\n        // mettre l'image dans le state pour l'affichage de l'aperçu\n       this.setState({fileSelected : URL.createObjectURL(event.target.files[0])})\n\n       // mettre le nom de l'image dans le state pour le renvoyer au composant supérieur \n       const File = (event.target.files[0])\n       this.setState({fileSelectedName : File})\n    }\n\n\n    render(){\n        const classBloc = `${classes.blocFormulaire} container w-100 `\n        const imageUploaded = this.state.fileSelectedName\n        return (\n            <form className={classBloc}>\n                <div className='row'>\n                <label htmlFor=\"exampleTextarea\" className=\"form-label mt-4\">Ecrivez votre message et cliquez sur postez pour qu'il se rajoute aux posts du forum</label>\n                    <div className=\"form-group col-8\">\n                        <textarea  \n                        className=\"form-control\" \n                        id=\"exampleTextarea\" rows=\"3\" \n                        value={this.props.values.textArea}\n                        onChange={this.props.handleChange}\n                        name=\"textArea\"\n                        />\n\n                    </div>\n                    <div className=\"form-group col-4\">\n                            <Input type=\"file\" onChange={event => this.fileSelected(event)}> Parcourir</Input>\n                            <Bouton couleur=\"primary\" type=\"button\" clic={this.props.handleSubmit}> Envoyer </Bouton>\n                            <img className={(classes.imagePres)} src={this.state.fileSelected}/>\n                    </div>\n                </div>\n            </form>\n        )\n    }\n}\n\nexport default withFormik({\n\n    mapPropsToValues : () => ({\n        textArea : \"\"\n    }),\n    validate : values => {\n        // Contient les règles de validations\n    },\n    handleSubmit:(values, {props}) => {\n        props.envoi(imageUploaded)\n    }\n    \n    })(PostMessages)"]},"metadata":{},"sourceType":"module"}