{"ast":null,"code":"var _jsxFileName = \"/Users/kevincarpentier/Library/Mobile Documents/com~apple~CloudDocs/Sites /PRojet 7 v2/frontend/src/container/connexion/inscription/inscription.js\";\nimport React from \"react\";\nimport Entete from \"../../../components/entete/entete\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router\";\nimport { withFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Inscription extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleInscription = () => {\n      const newUser = {\n        adresseMail: this.state.adresseMail,\n        pseudonyme: this.state.pseudonyme,\n        password: this.state.password,\n        textPresentation: this.state.biographie,\n        photoPresentation: this.state.photo,\n        sexe: this.state.sexe\n      }; // Vérifier que l'adresse mail ne soit pas déjà présente dans notre BDD \n      // Vérifier que le nom d'utilisateur n'existe pas déjà\n      // Vérifier que les 2 mots de passes correspondent\n\n      axios.post(\"http://localhost:8000/User/new\", newUser).then(res => {\n        if (res.status === 200) {\n          /* this.props.history.replace(\"/\") */\n          window.location.replace(\"http://localhost:3000/\");\n        }\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n              children: \"INSCRIPTION - NOUVEL UTILISATEUR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"exampleInputEmail1\",\n                className: \"form-label mt-4\",\n                children: \"Adresse Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: this.props.handleChange,\n                value: this.props.values.adresseMail,\n                name: \"adresseMail\",\n                type: \"email\",\n                className: \"form-control\",\n                id: \"exampleInputEmail1\",\n                \"aria-describedby\": \"emailHelp\",\n                placeholder: \"example@mail.com\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 29\n              }, this), this.props.errors.adresseMail && /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: \"red\"\n                },\n                children: [\" \", this.props.errors.adresseMail]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 63\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"pseudonyme\",\n                className: \"form-label mt-4\",\n                children: \"Pseudonyme\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: this.props.handleChange,\n                value: this.props.values.pseudonyme,\n                name: \"pseudonyme\",\n                type: \"email\",\n                className: \"form-control\",\n                id: \"exampleInputEmail1\",\n                \"aria-describedby\": \"emailHelp\",\n                placeholder: \"example@mail.com\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 29\n              }, this), this.props.errors.pseudonyme && /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: \"red\"\n                },\n                children: [\" \", this.props.errors.pseudonyme]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 62\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"exampleInputPassword1\",\n                className: \"form-label mt-4\",\n                children: \"Mot de passe\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: this.props.handleChange,\n                value: this.props.values.password,\n                name: \"password\",\n                type: \"password\",\n                className: \"form-control\",\n                id: \"exampleInputPassword1\",\n                placeholder: \"azerTY%1230e\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 29\n              }, this), this.props.errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: \"red\"\n                },\n                children: [\" \", this.props.errors.password]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 60\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"exampleInputPassword1\",\n                className: \"form-label mt-4\",\n                children: \"Confirmez votre mot de passe\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: this.props.handleChange,\n                value: this.props.values.password2,\n                name: \"password2\",\n                type: \"password\",\n                className: \"form-control\",\n                id: \"exampleInputPassword1\",\n                placeholder: \"azerTY%1230e\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"exampleTextarea\",\n                className: \"form-label mt-4\",\n                children: \"Biographie\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                onChange: this.props.handleChange,\n                value: this.props.values.textPresentation,\n                name: \"textPresentation\",\n                className: \"form-control\",\n                id: \"exampleTextarea\",\n                rows: \"3\",\n                placeholder: \"Parlez nous un petit peu de vous\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"formFile\",\n                className: \"form-label mt-4\",\n                children: \"Photo de profil\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: this.props.handleChange,\n                value: this.props.values.photo,\n                name: \"photo\",\n                className: \"form-control\",\n                type: \"file\",\n                id: \"formFile\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              onChange: this.props.handleChange,\n              value: this.props.values.sexe,\n              name: \"sexe\",\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n                className: \"mt-4\",\n                children: \"Sexe\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-check\",\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-check-label\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    value: this.props.values.sexe,\n                    name: \"sexe\",\n                    onChange: this.props.handleChange,\n                    type: \"radio\",\n                    className: \"form-check-input\",\n                    name: \"optionsRadios\",\n                    id: \"optionsRadios1\",\n                    value: \"0\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 33\n                  }, this), \"Homme\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-check\",\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-check-label\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    value: this.props.values.sexe,\n                    name: \"sexe\",\n                    onChange: this.props.handleChange,\n                    type: \"radio\",\n                    className: \"form-check-input\",\n                    name: \"optionsRadios\",\n                    id: \"optionsRadios2\",\n                    value: \"1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 33\n                  }, this), \"Femme\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              onClick: this.props.handleSubmit,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default withFormik({\n  mapPropsToValues: () => ({\n    adresseMail: \"\",\n    pseudonyme: \"\",\n    password: \"\",\n    passwordConfirm: \"\",\n    biographie: \"\",\n    photo: \"\",\n    sexe: null\n  }),\n  validationSchema: Yup.object().shape({\n    adresseMail: Yup.string().email(\"ceci n'est pas un type d'email reconnu\"),\n    pseudonyme: Yup.string().min(3, \"Pas assez de caractères\").max(16, \"Trop de caractères\"),\n    password: Yup.string().min(3, \"Pas assez de caractères\").max(16, \"Trop de caractères\"),\n    password2: Yup.mixed().test(\"match\", \"Passwords do not match\", // your error message\n    () => {\n      return this.parent.password === this.parent.passwordConfirmation;\n    })\n  }),\n  handleSubmit: (values, {\n    props\n  }) => {\n    this.handleInscription();\n  }\n})(Inscription);","map":{"version":3,"sources":["/Users/kevincarpentier/Library/Mobile Documents/com~apple~CloudDocs/Sites /PRojet 7 v2/frontend/src/container/connexion/inscription/inscription.js"],"names":["React","Entete","axios","Redirect","withFormik","Yup","Inscription","Component","handleInscription","newUser","adresseMail","state","pseudonyme","password","textPresentation","biographie","photoPresentation","photo","sexe","post","then","res","status","window","location","replace","render","props","handleChange","values","errors","color","password2","handleSubmit","mapPropsToValues","passwordConfirm","validationSchema","object","shape","string","email","min","max","mixed","test","parent","passwordConfirmation"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Entete from \"../../../components/entete/entete\";\nimport axios from \"axios\"\nimport { Redirect } from \"react-router\";\nimport {withFormik} from \"formik\"\nimport * as Yup from \"yup\"\n\nclass Inscription extends React.Component {\n/*     state =      {  \n            adresseMail : \"\",\n            pseudonyme : \"\",\n            password : \"\", \n            passwordConfirm : \"\", \n            biographie : \"\", \n            photo : \"\", \n            sexe : null\n\n    } */\n\n    handleInscription = () => {\n\n        const newUser = {\n            adresseMail : this.state.adresseMail,\n            pseudonyme : this.state.pseudonyme,\n            password : this.state.password,\n            textPresentation: this.state.biographie,\n            photoPresentation: this.state.photo,\n            sexe: this.state.sexe,\n        }   \n        // Vérifier que l'adresse mail ne soit pas déjà présente dans notre BDD \n            \n        // Vérifier que le nom d'utilisateur n'existe pas déjà\n\n        // Vérifier que les 2 mots de passes correspondent\n\n\n\n        axios.post(\"http://localhost:8000/User/new\", newUser)\n        .then (res => {\n            if(res.status === 200){\n                /* this.props.history.replace(\"/\") */\n                window.location.replace(\"http://localhost:3000/\")            }\n        })\n    } \n\n    render(){\n        return(\n            <>\n\n            <div className=\"container\">\n                <form>\n                    <fieldset>\n                        <legend>INSCRIPTION - NOUVEL UTILISATEUR</legend>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"exampleInputEmail1\" className=\"form-label mt-4\">Adresse Email</label>\n                            <input onChange={this.props.handleChange} value={this.props.values.adresseMail} name=\"adresseMail\"  type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"example@mail.com\"/>\n                            {this.props.errors.adresseMail && <span style={{color:\"red\"}}> {this.props.errors.adresseMail}</span>}\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"pseudonyme\" className=\"form-label mt-4\">Pseudonyme</label>\n                            <input onChange={this.props.handleChange} value={this.props.values.pseudonyme} name=\"pseudonyme\" type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"example@mail.com\"/>\n                            {this.props.errors.pseudonyme && <span style={{color:\"red\"}}> {this.props.errors.pseudonyme}</span>}\n\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"exampleInputPassword1\" className=\"form-label mt-4\">Mot de passe</label>\n                            <input onChange={this.props.handleChange} value={this.props.values.password} name=\"password\"  type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"azerTY%1230e\"/>\n                            {this.props.errors.password && <span style={{color:\"red\"}}> {this.props.errors.password}</span>}\n\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"exampleInputPassword1\" className=\"form-label mt-4\">Confirmez votre mot de passe</label>\n                            <input onChange={this.props.handleChange} value={this.props.values.password2} name=\"password2\" type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"azerTY%1230e\"/>\n                        </div>\n                        <div className=\"form-group\">\n                        </div>\n                        <div className=\"form-group\">\n                            <label  htmlFor=\"exampleTextarea\" className=\"form-label mt-4\" >Biographie</label>\n                            <textarea onChange={this.props.handleChange} value={this.props.values.textPresentation} name=\"textPresentation\" className=\"form-control\" id=\"exampleTextarea\" rows=\"3\" placeholder=\"Parlez nous un petit peu de vous\"></textarea>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"formFile\" className=\"form-label mt-4\">Photo de profil</label>\n                            <input onChange={this.props.handleChange} value={this.props.values.photo} name=\"photo\" className=\"form-control\" type=\"file\" id=\"formFile\"/>\n                        </div>\n                        <fieldset onChange={this.props.handleChange} value={this.props.values.sexe} name=\"sexe\" className=\"form-group\">\n                            <legend className=\"mt-4\">Sexe</legend>\n                            <div className=\"form-check\">\n                                <label className=\"form-check-label\">\n                                <input value={this.props.values.sexe} name=\"sexe\" onChange={this.props.handleChange} type=\"radio\" className=\"form-check-input\" name=\"optionsRadios\" id=\"optionsRadios1\" value=\"0\"/>\n                                Homme\n                                </label>\n                            </div>\n                            <div className=\"form-check\">\n                                <label className=\"form-check-label\">\n                                <input value={this.props.values.sexe} name=\"sexe\" onChange={this.props.handleChange} type=\"radio\" className=\"form-check-input\" name=\"optionsRadios\" id=\"optionsRadios2\" value=\"1\"/>\n                                Femme\n                                </label>\n                            </div>\n                        </fieldset>\n                        <button type=\"submit\" className=\"btn btn-primary\" onClick={this.props.handleSubmit}>Submit</button>\n                    </fieldset>\n                </form>\n            </div>\n        </>\n        )\n    }\n}\n\nexport default withFormik({\n    mapPropsToValues : () => ({\n        adresseMail : \"\",\n        pseudonyme : \"\",\n        password : \"\", \n        passwordConfirm : \"\", \n        biographie : \"\", \n        photo : \"\", \n        sexe : null    \n    }),\n    validationSchema : Yup.object().shape({\n        adresseMail : Yup.string()\n        .email(\"ceci n'est pas un type d'email reconnu\"),\n        pseudonyme : Yup.string()\n        .min(3, \"Pas assez de caractères\")\n        .max(16, \"Trop de caractères\"),\n        password : Yup.string()\n        .min(3, \"Pas assez de caractères\")\n        .max(16, \"Trop de caractères\"),\n        password2 : Yup.mixed()\n         .test(     \n        \"match\",\n         \"Passwords do not match\", // your error message\n          () => {\n           return this.parent.password === this.parent.passwordConfirmation})\n    })  \n\n    ,\n    handleSubmit:(values, {props}) => {\n        this.handleInscription()\n    }\n    \n    })(Inscription)"]},"metadata":{},"sourceType":"module"}