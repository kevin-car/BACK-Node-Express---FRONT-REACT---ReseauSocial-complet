{"ast":null,"code":"var _jsxFileName = \"/Users/kevincarpentier/Library/Mobile Documents/com~apple~CloudDocs/Sites /PRojet 7 v2/frontend/src/container/postMessage/postMessage.js\";\nimport React from \"react\";\nimport classes from \"./postMessage.module.css\";\nimport Input from \"../../components/bouton/input\";\nimport Bouton from \"../../components/bouton/bouton\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PostMessages extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      post: \"\",\n      image: \"none\",\n      auteur: \"default\",\n      createdAt: \"2021-09-08T16:38:20.000Z\",\n      updatedAt: \"2021-09-08T16:38:20.000Z\"\n    };\n\n    this.postMessages = () => {\n      axios({\n        method: 'post',\n        url: 'url',\n        data: mesDonnees\n      }).then(function (reponse) {\n        //On traite la suite une fois la réponse obtenue \n        console.log(reponse);\n      }).catch(function (erreur) {\n        //On traite ici les erreurs éventuellement survenues\n        console.log(erreur);\n      });\n      axios.post(\"http://localhost:8000/createMessage\").then(reponse => {\n        const messagess = reponse.data.data.map(message => {\n          return {\n            id: message.id,\n            auteur: message.auteur,\n            photo: message.photo,\n            message: message.message,\n            createdAt: message.createdAt,\n            updatedAt: message.updatedAt,\n            created: message.created\n          };\n        });\n        this.setState({\n          messagess\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n  }\n\n  render() {\n    const classBloc = `${classes.blocFormulaire} container w-100 `;\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classBloc,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"exampleTextarea\",\n          className: \"form-label mt-4\",\n          children: \"Ecrivez votre message et cliquez sur postez pour qu'il se rajoute aux posts du forum\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group col-8\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"form-control\",\n            id: \"exampleTextarea\",\n            rows: \"3\",\n            value: this.state.post,\n            onChange: event => this.setState({\n              post: event.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group col-4\",\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            children: \" Parcourir\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Bouton, {\n            couleur: \"secondary\",\n            type: \"submit\",\n            submitMessage: this.postMessages,\n            children: \" Envoyer \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default PostMessages;","map":{"version":3,"sources":["/Users/kevincarpentier/Library/Mobile Documents/com~apple~CloudDocs/Sites /PRojet 7 v2/frontend/src/container/postMessage/postMessage.js"],"names":["React","classes","Input","Bouton","axios","PostMessages","Component","state","post","image","auteur","createdAt","updatedAt","postMessages","method","url","data","mesDonnees","then","reponse","console","log","catch","erreur","messagess","map","message","id","photo","created","setState","error","render","classBloc","blocFormulaire","event","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classes from \"./postMessage.module.css\"\nimport Input from \"../../components/bouton/input\";\nimport Bouton from \"../../components/bouton/bouton\";\nimport axios from \"axios\"\n\nclass PostMessages extends React.Component {\n\n    state = {\n        post : \"\",\n        image : \"none\",\n        auteur : \"default\",\n        createdAt : \"2021-09-08T16:38:20.000Z\",\n        updatedAt : \"2021-09-08T16:38:20.000Z\"\n    }\n\n    postMessages = () => {\n\n        axios({\n            method: 'post',\n            url: 'url',\n            data: mesDonnees\n        })\n        .then(function (reponse) {\n            //On traite la suite une fois la réponse obtenue \n            console.log(reponse);\n        })\n        .catch(function (erreur) {\n            //On traite ici les erreurs éventuellement survenues\n            console.log(erreur);\n        });\n\n            axios.post(\"http://localhost:8000/createMessage\")\n            .then(reponse => {\n                const messagess = reponse.data.data.map(message => {\n                    return{\n                        id: message.id,\n                        auteur: message.auteur,\n                        photo: message.photo,\n                        message: message.message,\n                        createdAt: message.createdAt,\n                        updatedAt: message.updatedAt,\n                        created : message.created\n                    }\n            })\n            this.setState({messagess})\n    \n        })    \n            .catch(error => {\n                console.log(error)\n            })\n    }\n\n    render(){\n\n        const classBloc = `${classes.blocFormulaire} container w-100 `\n\n        return (\n            <form className={classBloc}>\n                <div className='row'>\n                <label htmlFor=\"exampleTextarea\" className=\"form-label mt-4\">Ecrivez votre message et cliquez sur postez pour qu'il se rajoute aux posts du forum</label>\n                    <div className=\"form-group col-8\">\n                        <textarea \n                        className=\"form-control\" \n                        id=\"exampleTextarea\" rows=\"3\" \n                        value={this.state.post}\n                        onChange={(event) => this.setState({post:event.target.value})}\n                        />\n                    </div>\n                    <div className=\"form-group col-4\">\n                        <Input> Parcourir</Input>\n                        <Bouton couleur=\"secondary\" type=\"submit\" submitMessage={this.postMessages}> Envoyer </Bouton>\n                    </div>\n                </div>\n\n            </form>\n        )\n    }\n}\n\nexport default PostMessages\n"]},"metadata":{},"sourceType":"module"}