{"ast":null,"code":"var _jsxFileName = \"/Users/kevincarpentier/Library/Mobile Documents/com~apple~CloudDocs/Sites /PRojet 7 v2/frontend/src/container/pageMessages.js\";\nimport React from \"react\";\nimport Entete from \"./entete/entete\";\nimport PostMessages from \"./postMessage/postMessage\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass PageMessage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ilLoaded: false,\n      messagess: [],\n      messageSaisi: \"\",\n      imageSaisi: \"none\",\n      auteurSaisi: \"default\",\n      createdAtSaisi: \"\",\n      updatedAtSaisi: \"\"\n    };\n\n    this.componentDidMount = () => {\n      axios.get(\"http://localhost:8000/\").then(reponse => {\n        const messagess = reponse.data.data.map(message => {\n          return {\n            id: message.id,\n            auteur: message.auteur,\n            photo: message.photo,\n            message: message.message,\n            createdAt: message.createdAt,\n            updatedAt: message.updatedAt,\n            created: message.created\n          };\n        });\n        this.setState({\n          messagess\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.postMessages = () => {\n      /*         axios.post('http://localhost:8000/createMessage/', {\n                      message : this.state.messageSaisi,\n                      image : this.state.imageSaisi,\n                      auteur : this.state.auteurSaisi,\n                      createdAt : this.state.createdAtSaisi,\n                      updatedAt : this.state.updatedAtSaisi,\n                      created : this.state.createdAtSaisi\n                  }\n              )\n              .then(function (reponse) {\n                  //On traite la suite une fois la réponse obtenue \n                  console.log(reponse);\n              })\n              .catch(function (erreur) {\n                  //On traite ici les erreurs éventuellement survenues\n                  console.log(erreur);\n              });  */\n      console.log('ca fonctionne');\n    };\n\n    this.HandleDeleteMessage = id => {\n      const messageIndex = this.state.messagess.findIndex(l => {\n        return l.id === id;\n      }); // Supprime dans les states\n\n      const newmessagess = [...this.state.messagess];\n      newmessagess.splice(messageIndex, 1);\n      this.setState({\n        messagess: newmessagess\n      });\n      console.log(newmessagess); //Supprime dans la base de donnée\n\n      const pathWithID = `http://localhost:8000/delete`;\n      console.log(pathWithID, \"l'id supprimé :\", id);\n      axios.delete(pathWithID, {\n        data: {\n          id: id\n        },\n        headers: {\n          \"Authorization\": \"clé d'autorisation\"\n        }\n      });\n    };\n  }\n\n  // Mettre à jour l'heure dans les states\n  componentDidMount() {\n    setInterval(() => {\n      this.setState({\n        createdAtSaisi: new Date().toLocaleString(),\n        updatedAtSaisi: new Date().toLocaleString()\n      });\n    }, 1000);\n  } // Poster un nouveau message \n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Entete, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PostMessages, {\n        envoi: () => this.postMessages(),\n        value: this.state.messageSaisi,\n        onChange: event => this.setState({\n          messageSaisi: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), this.state.messagess.map((message, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          id: this.props.id,\n          className: \"container \",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row pull-left\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \" card border-success mb-3 w-50 col-10\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-header\",\n                children: message.createdAt\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"card-title\",\n                  children: message.auteur\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-text\",\n                  children: message.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"btn-group col-1 h-25 \",\n              role: \"group\",\n              \"aria-label\": \"Button group with nested dropdown\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-dark\",\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"btn-group\",\n                role: \"group\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  id: \"btnGroupDrop4\",\n                  type: \"button\",\n                  className: \"btn btn-dark dropdown-toggle\",\n                  value: message.id,\n                  \"data-bs-toggle\": \"dropdown\",\n                  \"aria-haspopup\": \"true\",\n                  \"aria-expanded\": \"false\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"dropdown-menu\",\n                  \"aria-labelledby\": \"btnGroupDrop4\",\n                  children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                    className: \"dropdown-item\",\n                    href: \"www.google.fr\",\n                    children: \"Modifier le message\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                    className: \"dropdown-item\",\n                    onClick: message.deleteMessage,\n                    href: \"localhost:8000/delete/2\",\n                    children: \"Supprimer le message\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 127,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true);\n  }\n\n}\n\nexport default PageMessage;","map":{"version":3,"sources":["/Users/kevincarpentier/Library/Mobile Documents/com~apple~CloudDocs/Sites /PRojet 7 v2/frontend/src/container/pageMessages.js"],"names":["React","Entete","PostMessages","axios","PageMessage","Component","state","ilLoaded","messagess","messageSaisi","imageSaisi","auteurSaisi","createdAtSaisi","updatedAtSaisi","componentDidMount","get","then","reponse","data","map","message","id","auteur","photo","createdAt","updatedAt","created","setState","catch","error","console","log","postMessages","HandleDeleteMessage","messageIndex","findIndex","l","newmessagess","splice","pathWithID","delete","headers","setInterval","Date","toLocaleString","render","event","target","value","index","props","deleteMessage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,WAAN,SAA0BJ,KAAK,CAACK,SAAhC,CAA0C;AAAA;AAAA;AAAA,SAEtCC,KAFsC,GAE9B;AACJC,MAAAA,QAAQ,EAAG,KADP;AAEJC,MAAAA,SAAS,EAAG,EAFR;AAIJC,MAAAA,YAAY,EAAG,EAJX;AAKJC,MAAAA,UAAU,EAAG,MALT;AAMJC,MAAAA,WAAW,EAAG,SANV;AAOJC,MAAAA,cAAc,EAAG,EAPb;AAQJC,MAAAA,cAAc,EAAG;AARb,KAF8B;;AAAA,SActCC,iBAdsC,GAclB,MAAM;AACtBX,MAAAA,KAAK,CAACY,GAAN,CAAU,wBAAV,EACCC,IADD,CACMC,OAAO,IAAI;AACb,cAAMT,SAAS,GAAGS,OAAO,CAACC,IAAR,CAAaA,IAAb,CAAkBC,GAAlB,CAAsBC,OAAO,IAAI;AAC/C,iBAAM;AACFC,YAAAA,EAAE,EAAED,OAAO,CAACC,EADV;AAEFC,YAAAA,MAAM,EAAEF,OAAO,CAACE,MAFd;AAGFC,YAAAA,KAAK,EAAEH,OAAO,CAACG,KAHb;AAIFH,YAAAA,OAAO,EAAEA,OAAO,CAACA,OAJf;AAKFI,YAAAA,SAAS,EAAEJ,OAAO,CAACI,SALjB;AAMFC,YAAAA,SAAS,EAAEL,OAAO,CAACK,SANjB;AAOFC,YAAAA,OAAO,EAAGN,OAAO,CAACM;AAPhB,WAAN;AASP,SAVqB,CAAlB;AAWJ,aAAKC,QAAL,CAAc;AAACnB,UAAAA;AAAD,SAAd;AAEH,OAfG,EAgBCoB,KAhBD,CAgBOC,KAAK,IAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,OAlBD;AAmBH,KAlCqC;;AAAA,SA+CtCG,YA/CsC,GA+CvB,MAAM;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQF,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACH,KAlEqC;;AAAA,SAoEtCE,mBApEsC,GAoEfZ,EAAD,IAAQ;AAC1B,YAAMa,YAAY,GAAG,KAAK5B,KAAL,CAAWE,SAAX,CAAqB2B,SAArB,CAA+BC,CAAC,IAAI;AACrD,eAAOA,CAAC,CAACf,EAAF,KAASA,EAAhB;AACH,OAFoB,CAArB,CAD0B,CAK1B;;AACA,YAAMgB,YAAY,GAAG,CAAC,GAAG,KAAK/B,KAAL,CAAWE,SAAf,CAArB;AACA6B,MAAAA,YAAY,CAACC,MAAb,CAAoBJ,YAApB,EAAkC,CAAlC;AAEA,WAAKP,QAAL,CAAc;AAACnB,QAAAA,SAAS,EAAG6B;AAAb,OAAd;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAYM,YAAZ,EAV0B,CAW1B;;AACA,YAAME,UAAU,GAAI,8BAApB;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,UAAZ,EAAwB,iBAAxB,EAA2ClB,EAA3C;AAEAlB,MAAAA,KAAK,CAACqC,MAAN,CAAaD,UAAb,EAAyB;AACpBrB,QAAAA,IAAI,EAAE;AAAEG,UAAAA,EAAE,EAAEA;AAAN,SADc;AAEpBoB,QAAAA,OAAO,EAAE;AAAE,2BAAiB;AAAnB;AAFW,OAAzB;AAIH,KAvFqC;AAAA;;AAqCtC;AACA3B,EAAAA,iBAAiB,GAAG;AAChB4B,IAAAA,WAAW,CAAE,MAAM;AACjB,WAAKf,QAAL,CAAc;AACZf,QAAAA,cAAc,EAAG,IAAI+B,IAAJ,GAAWC,cAAX,EADL;AAEZ/B,QAAAA,cAAc,EAAG,IAAI8B,IAAJ,GAAWC,cAAX;AAFL,OAAd;AAID,KALU,EAKT,IALS,CAAX;AAMD,GA7CmC,CA8CtC;;;AA2CAC,EAAAA,MAAM,GAAE;AAEJ,wBACI;AAAA,8BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,YAAD;AACI,QAAA,KAAK,EAAE,MAAM,KAAKb,YAAL,EADjB;AAEI,QAAA,KAAK,EAAE,KAAK1B,KAAL,CAAWG,YAFtB;AAGI,QAAA,QAAQ,EAAGqC,KAAD,IAAW,KAAKnB,QAAL,CAAc;AAAClB,UAAAA,YAAY,EAACqC,KAAK,CAACC,MAAN,CAAaC;AAA3B,SAAd;AAHzB;AAAA;AAAA;AAAA;AAAA,cAFJ,EASK,KAAK1C,KAAL,CAAWE,SAAX,CAAqBW,GAArB,CAAyB,CAACC,OAAD,EAAU6B,KAAV,KAAoB;AAC1C,4BACI;AAAK,UAAA,EAAE,EAAE,KAAKC,KAAL,CAAW7B,EAApB;AAAwB,UAAA,SAAS,EAAC,YAAlC;AAAA,iCACA;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA,oCACQ;AAAK,cAAA,SAAS,EAAC,uCAAf;AAAA,sCACI;AAAK,gBAAA,SAAS,EAAC,aAAf;AAAA,0BACKD,OAAO,CAACI;AADb;AAAA;AAAA;AAAA;AAAA,sBADJ,eAII;AAAK,gBAAA,SAAS,EAAC,WAAf;AAAA,wCACI;AAAI,kBAAA,SAAS,EAAC,YAAd;AAAA,4BAA4BJ,OAAO,CAACE;AAApC;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAG,kBAAA,SAAS,EAAC,WAAb;AAAA,4BAA0BF,OAAO,CAACA;AAAlC;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADR,eAWQ;AAAK,cAAA,SAAS,EAAC,uBAAf;AAAuC,cAAA,IAAI,EAAC,OAA5C;AAAoD,4BAAW,mCAA/D;AAAA,sCACA;AAAQ,gBAAA,IAAI,EAAC,QAAb;AAAsB,gBAAA,SAAS,EAAC,cAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,eAEA;AAAK,gBAAA,SAAS,EAAC,WAAf;AAA2B,gBAAA,IAAI,EAAC,OAAhC;AAAA,wCACI;AAAQ,kBAAA,EAAE,EAAC,eAAX;AAA2B,kBAAA,IAAI,EAAC,QAAhC;AAAyC,kBAAA,SAAS,EAAC,8BAAnD;AAAkF,kBAAA,KAAK,EAAEA,OAAO,CAACC,EAAjG;AAAqG,oCAAe,UAApH;AAA+H,mCAAc,MAA7I;AAAoJ,mCAAc;AAAlK;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAK,kBAAA,SAAS,EAAC,eAAf;AAA+B,qCAAgB,eAA/C;AAAA,0CACA;AAAG,oBAAA,SAAS,EAAC,eAAb;AAA6B,oBAAA,IAAI,EAAC,eAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADA,eAEA;AAAG,oBAAA,SAAS,EAAC,eAAb;AAA6B,oBAAA,OAAO,EAAED,OAAO,CAAC+B,aAA9C;AAA6D,oBAAA,IAAI,EAAC,yBAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXR;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBADJ;AA0BH,OA3BA,CATL;AAAA,oBADJ;AAyCH;;AApIqC;;AAuI1C,eAAe/C,WAAf","sourcesContent":["import React from \"react\";\nimport Entete from \"./entete/entete\";\nimport PostMessages from \"./postMessage/postMessage\";\nimport axios from 'axios'\n\nclass PageMessage extends React.Component {\n\n    state = {\n        ilLoaded : false,\n        messagess : [],\n\n        messageSaisi : \"\",\n        imageSaisi : \"none\",\n        auteurSaisi : \"default\",\n        createdAtSaisi : \"\",\n        updatedAtSaisi : \"\",\n\n    }\n    \n    componentDidMount = () => {\n        axios.get(\"http://localhost:8000/\")\n        .then(reponse => {\n            const messagess = reponse.data.data.map(message => {\n                return{\n                    id: message.id,\n                    auteur: message.auteur,\n                    photo: message.photo,\n                    message: message.message,\n                    createdAt: message.createdAt,\n                    updatedAt: message.updatedAt,\n                    created : message.created\n                }\n        })\n        this.setState({messagess})\n\n    })    \n        .catch(error => {\n            console.log(error)\n        })\n    }\n\n    \n    // Mettre à jour l'heure dans les states\n    componentDidMount() {\n        setInterval( () => {\n          this.setState({\n            createdAtSaisi : new Date().toLocaleString(),\n            updatedAtSaisi : new Date().toLocaleString()\n          })\n        },1000)\n      }\n    // Poster un nouveau message \n    postMessages = () => {\n/*         axios.post('http://localhost:8000/createMessage/', {\n                message : this.state.messageSaisi,\n                image : this.state.imageSaisi,\n                auteur : this.state.auteurSaisi,\n                createdAt : this.state.createdAtSaisi,\n                updatedAt : this.state.updatedAtSaisi,\n                created : this.state.createdAtSaisi\n            }\n        )\n        .then(function (reponse) {\n            //On traite la suite une fois la réponse obtenue \n            console.log(reponse);\n        })\n        .catch(function (erreur) {\n            //On traite ici les erreurs éventuellement survenues\n            console.log(erreur);\n        });  */\n        console.log('ca fonctionne')\n    }\n\n    HandleDeleteMessage = (id) => {\n        const messageIndex = this.state.messagess.findIndex(l => {\n            return l.id === id\n        })\n\n        // Supprime dans les states\n        const newmessagess = [...this.state.messagess]\n        newmessagess.splice(messageIndex, 1)\n\n        this.setState({messagess : newmessagess})\n        console.log(newmessagess)\n        //Supprime dans la base de donnée\n        const pathWithID = `http://localhost:8000/delete`\n        console.log(pathWithID, \"l'id supprimé :\", id)\n\n        axios.delete(pathWithID, {\n             data: { id: id },\n             headers: { \"Authorization\": \"clé d'autorisation\" }\n        });\n    }\n\n    render(){\n\n        return(\n            <>\n                <Entete />\n                <PostMessages \n                    envoi={() => this.postMessages()}\n                    value={this.state.messageSaisi}\n                    onChange={(event) => this.setState({messageSaisi:event.target.value})}\n\n                />\n                {/* Affichage de tous les messages postés ! */} \n                {this.state.messagess.map((message, index) => {\n                    return(\n                        <div id={this.props.id} className=\"container \">\n                        <div className=\"row pull-left\">\n                                <div className=\" card border-success mb-3 w-50 col-10\"  >\n                                    <div className=\"card-header\">\n                                        {message.createdAt}\n                                    </div>\n                                    <div className=\"card-body\">\n                                        <h4 className=\"card-title\">{message.auteur}</h4>\n                                        <p className=\"card-text\">{message.message}</p>\n                                    </div>\n                                </div>\n                                {/* Bloc menu déroulant des Actions : Modifier et Supprimer */}\n                                <div className=\"btn-group col-1 h-25 \" role=\"group\" aria-label=\"Button group with nested dropdown\">\n                                <button type=\"button\" className=\"btn btn-dark\">Actions</button>\n                                <div className=\"btn-group\" role=\"group\">\n                                    <button id=\"btnGroupDrop4\" type=\"button\" className=\"btn btn-dark dropdown-toggle\" value={message.id} data-bs-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"></button>\n                                    <div className=\"dropdown-menu\" aria-labelledby=\"btnGroupDrop4\" >\n                                    <a className=\"dropdown-item\" href=\"www.google.fr\">Modifier le message</a>\n                                    <a className=\"dropdown-item\" onClick={message.deleteMessage} href=\"localhost:8000/delete/2\" >Supprimer le message</a>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    )\n                })}\n\n            </>\n            )\n    }\n}\n\nexport default PageMessage"]},"metadata":{},"sourceType":"module"}